{"id":"cc727a36acb029ed269182ea8c8d5f70","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/MemoryRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title MemoryRegistry\n * @dev Contract for anchoring memory hashes on 0G Chain for verifiability\n * @notice This contract allows agents to commit memory hashes and verify them across agents\n */\ncontract MemoryRegistry is Ownable, ReentrancyGuard {\n    struct MemoryHash {\n        bytes32 hash;\n        string metadata;\n        address agent;\n        uint256 timestamp;\n        bool isActive;\n        string zgStorageId;  // 0G Storage identifier\n        string contentType;  // Type of content (text, image, etc.)\n        uint256 size;        // Size of the content\n        string[] tags;       // Tags for categorization\n    }\n\n    // State variables\n    mapping(bytes32 => MemoryHash) public memoryHashes;\n    mapping(address => bytes32[]) public agentMemories;\n    mapping(bytes32 => bool) public verifiedHashes;\n    mapping(string => bytes32) public zgStorageToHash;  // Map 0G Storage ID to hash\n    mapping(string => bytes32[]) public tagToHashes;    // Tag-based indexing\n    mapping(string => uint256) public contentTypeCount; // Count by content type\n\n    bytes32[] public allMemoryHashes;\n    string[] public allTags;\n\n    // Events\n    event MemoryHashCommitted(\n        bytes32 indexed hash,\n        address indexed agent,\n        string metadata,\n        string zgStorageId,\n        string contentType,\n        uint256 timestamp\n    );\n\n    event MemoryHashVerified(\n        bytes32 indexed hash,\n        address indexed verifier,\n        uint256 timestamp\n    );\n\n    event MemoryHashRevoked(\n        bytes32 indexed hash,\n        address indexed agent,\n        uint256 timestamp\n    );\n\n    event MemoryTagged(\n        bytes32 indexed hash,\n        string[] tags,\n        uint256 timestamp\n    );\n\n    event MemoryIndexUpdated(\n        bytes32 indexed hash,\n        string zgStorageId,\n        uint256 timestamp\n    );\n\n    // Modifiers\n    modifier onlyActiveHash(bytes32 hash) {\n        require(memoryHashes[hash].isActive, \"Memory hash is not active\");\n        _;\n    }\n\n    modifier onlyHashOwner(bytes32 hash) {\n        require(\n            memoryHashes[hash].agent == msg.sender,\n            \"Not the owner of this memory hash\"\n        );\n        _;\n    }\n\n    constructor() Ownable(msg.sender) {}\n\n    /**\n     * @dev Commit a memory hash to the registry with 0G Storage integration\n     * @param hash The hash of the memory content\n     * @param metadata Additional metadata about the memory\n     * @param zgStorageId The 0G Storage identifier\n     * @param contentType Type of content (text, image, etc.)\n     * @param size Size of the content in bytes\n     * @param tags Tags for categorization\n     */\n    function commitMemoryHash(\n        bytes32 hash,\n        string calldata metadata,\n        string calldata zgStorageId,\n        string calldata contentType,\n        uint256 size,\n        string[] calldata tags\n    ) external nonReentrant returns (bytes32) {\n        require(hash != bytes32(0), \"Invalid hash\");\n        require(memoryHashes[hash].hash == bytes32(0), \"Hash already exists\");\n        require(bytes(zgStorageId).length > 0, \"0G Storage ID required\");\n\n        MemoryHash memory newMemory = MemoryHash({\n            hash: hash,\n            metadata: metadata,\n            agent: msg.sender,\n            timestamp: block.timestamp,\n            isActive: true,\n            zgStorageId: zgStorageId,\n            contentType: contentType,\n            size: size,\n            tags: tags\n        });\n\n        memoryHashes[hash] = newMemory;\n        agentMemories[msg.sender].push(hash);\n        allMemoryHashes.push(hash);\n\n        // Index by 0G Storage ID\n        zgStorageToHash[zgStorageId] = hash;\n\n        // Index by tags\n        for (uint256 i = 0; i < tags.length; i++) {\n            tagToHashes[tags[i]].push(hash);\n            _addTagIfNew(tags[i]);\n        }\n\n        // Count by content type\n        contentTypeCount[contentType]++;\n\n        emit MemoryHashCommitted(hash, msg.sender, metadata, zgStorageId, contentType, block.timestamp);\n        emit MemoryTagged(hash, tags, block.timestamp);\n\n        return hash;\n    }\n\n    /**\n     * @dev Verify a memory hash (cross-agent verification)\n     * @param hash The hash to verify\n     */\n    function verifyMemoryHash(\n        bytes32 hash\n    ) external onlyActiveHash(hash) nonReentrant {\n        require(memoryHashes[hash].hash != bytes32(0), \"Hash does not exist\");\n\n        verifiedHashes[hash] = true;\n\n        emit MemoryHashVerified(hash, msg.sender, block.timestamp);\n    }\n\n    /**\n     * @dev Revoke a memory hash (only by the owner)\n     * @param hash The hash to revoke\n     */\n    function revokeMemoryHash(\n        bytes32 hash\n    ) external onlyActiveHash(hash) onlyHashOwner(hash) nonReentrant {\n        memoryHashes[hash].isActive = false;\n\n        emit MemoryHashRevoked(hash, msg.sender, block.timestamp);\n    }\n\n    /**\n     * @dev Get memory hash details\n     * @param hash The hash to query\n     */\n    function getMemoryHash(\n        bytes32 hash\n    ) external view returns (MemoryHash memory) {\n        return memoryHashes[hash];\n    }\n\n    /**\n     * @dev Get all memory hashes for an agent\n     * @param agent The agent address\n     */\n    function getAgentMemories(\n        address agent\n    ) external view returns (bytes32[] memory) {\n        return agentMemories[agent];\n    }\n\n    /**\n     * @dev Check if a hash is verified\n     * @param hash The hash to check\n     */\n    function isMemoryHashVerified(bytes32 hash) external view returns (bool) {\n        return verifiedHashes[hash];\n    }\n\n    /**\n     * @dev Get memory hash by 0G Storage ID\n     * @param zgStorageId The 0G Storage identifier\n     */\n    function getMemoryHashByZGStorageId(string calldata zgStorageId) external view returns (bytes32) {\n        return zgStorageToHash[zgStorageId];\n    }\n\n    /**\n     * @dev Get memory hashes by tag\n     * @param tag The tag to search for\n     */\n    function getMemoryHashesByTag(string calldata tag) external view returns (bytes32[] memory) {\n        return tagToHashes[tag];\n    }\n\n    /**\n     * @dev Get memory hashes by content type\n     * @param contentType The content type to search for\n     */\n    function getMemoryHashesByContentType(string calldata contentType) external view returns (bytes32[] memory) {\n        bytes32[] memory result = new bytes32[](contentTypeCount[contentType]);\n        uint256 resultIndex = 0;\n        \n        for (uint256 i = 0; i < allMemoryHashes.length; i++) {\n            bytes32 hash = allMemoryHashes[i];\n            if (keccak256(bytes(memoryHashes[hash].contentType)) == keccak256(bytes(contentType))) {\n                result[resultIndex] = hash;\n                resultIndex++;\n            }\n        }\n        \n        return result;\n    }\n\n    /**\n     * @dev Get all available tags\n     */\n    function getAllTags() external view returns (string[] memory) {\n        return allTags;\n    }\n\n    /**\n     * @dev Get total number of memory hashes\n     */\n    function getTotalMemoryHashes() external view returns (uint256) {\n        return allMemoryHashes.length;\n    }\n\n    /**\n     * @dev Get memory hash by index (for enumeration)\n     * @param index The index in the array\n     */\n    function getMemoryHashByIndex(\n        uint256 index\n    ) external view returns (bytes32) {\n        require(index < allMemoryHashes.length, \"Index out of bounds\");\n        return allMemoryHashes[index];\n    }\n\n    /**\n     * @dev Batch commit multiple memory hashes with 0G Storage integration\n     * @param hashes Array of hashes to commit\n     * @param metadatas Array of metadata corresponding to hashes\n     * @param zgStorageIds Array of 0G Storage identifiers\n     * @param contentTypes Array of content types\n     * @param sizes Array of content sizes\n     * @param allTags Array of tag arrays for each memory\n     */\n    function batchCommitMemoryHashes(\n        bytes32[] calldata hashes,\n        string[] calldata metadatas,\n        string[] calldata zgStorageIds,\n        string[] calldata contentTypes,\n        uint256[] calldata sizes,\n        string[][] calldata allTags\n    ) external {\n        require(hashes.length == metadatas.length, \"Arrays length mismatch\");\n        require(hashes.length == zgStorageIds.length, \"ZG Storage IDs length mismatch\");\n        require(hashes.length == contentTypes.length, \"Content types length mismatch\");\n        require(hashes.length == sizes.length, \"Sizes length mismatch\");\n        require(hashes.length == allTags.length, \"Tags length mismatch\");\n        require(hashes.length > 0, \"No hashes to commit\");\n        require(hashes.length <= 50, \"Batch too large\"); // Limit batch size\n\n        for (uint256 i = 0; i < hashes.length; i++) {\n            if (memoryHashes[hashes[i]].hash == bytes32(0)) {\n                MemoryHash memory newMemory = MemoryHash({\n                    hash: hashes[i],\n                    metadata: metadatas[i],\n                    agent: msg.sender,\n                    timestamp: block.timestamp,\n                    isActive: true,\n                    zgStorageId: zgStorageIds[i],\n                    contentType: contentTypes[i],\n                    size: sizes[i],\n                    tags: allTags[i]\n                });\n\n                memoryHashes[hashes[i]] = newMemory;\n                agentMemories[msg.sender].push(hashes[i]);\n                allMemoryHashes.push(hashes[i]);\n\n                // Index by 0G Storage ID\n                zgStorageToHash[zgStorageIds[i]] = hashes[i];\n\n                // Index by tags\n                for (uint256 j = 0; j < allTags[i].length; j++) {\n                    tagToHashes[allTags[i][j]].push(hashes[i]);\n                    _addTagIfNew(allTags[i][j]);\n                }\n\n                // Count by content type\n                contentTypeCount[contentTypes[i]]++;\n\n                emit MemoryHashCommitted(hashes[i], msg.sender, metadatas[i], zgStorageIds[i], contentTypes[i], block.timestamp);\n                emit MemoryTagged(hashes[i], allTags[i], block.timestamp);\n            }\n        }\n    }\n\n    /**\n     * @dev Get comprehensive memory statistics\n     */\n    function getMemoryStats()\n        external\n        view\n        returns (\n            uint256 totalMemories,\n            uint256 activeMemories,\n            uint256 verifiedMemories,\n            uint256 totalTags,\n            uint256 totalSize\n        )\n    {\n        totalMemories = allMemoryHashes.length;\n        totalTags = allTags.length;\n\n        uint256 activeCount = 0;\n        uint256 verifiedCount = 0;\n        uint256 sizeSum = 0;\n\n        for (uint256 i = 0; i < allMemoryHashes.length; i++) {\n            bytes32 hash = allMemoryHashes[i];\n            if (memoryHashes[hash].isActive) {\n                activeCount++;\n                sizeSum += memoryHashes[hash].size;\n            }\n            if (verifiedHashes[hash]) {\n                verifiedCount++;\n            }\n        }\n\n        return (totalMemories, activeCount, verifiedCount, totalTags, sizeSum);\n    }\n\n    /**\n     * @dev Private function to add tag if new\n     */\n    function _addTagIfNew(string memory tag) private {\n        // Check if tag already exists\n        for (uint256 i = 0; i < allTags.length; i++) {\n            if (keccak256(bytes(allTags[i])) == keccak256(bytes(tag))) {\n                return; // Tag already exists\n            }\n        }\n        allTags.push(tag);\n    }\n\n    /**\n     * @dev Update 0G Storage ID for existing memory (for migration purposes)\n     * @param hash The memory hash\n     * @param newZgStorageId The new 0G Storage ID\n     */\n    function updateZGStorageId(\n        bytes32 hash,\n        string calldata newZgStorageId\n    ) external onlyActiveHash(hash) onlyHashOwner(hash) nonReentrant {\n        require(bytes(newZgStorageId).length > 0, \"Invalid 0G Storage ID\");\n        \n        // Remove old mapping if exists\n        string memory oldZgStorageId = memoryHashes[hash].zgStorageId;\n        if (bytes(oldZgStorageId).length > 0) {\n            delete zgStorageToHash[oldZgStorageId];\n        }\n        \n        // Update the storage ID\n        memoryHashes[hash].zgStorageId = newZgStorageId;\n        zgStorageToHash[newZgStorageId] = hash;\n        \n        emit MemoryIndexUpdated(hash, newZgStorageId, block.timestamp);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/MemoryRegistry.sol:270:9:\n    |\n270 |         string[][] calldata allTags\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/MemoryRegistry.sol:34:5:\n   |\n34 |     string[] public allTags;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":1305,"file":"contracts/MemoryRegistry.sol","message":"The shadowed declaration is here:","start":1282}],"severity":"warning","sourceLocation":{"end":8241,"file":"contracts/MemoryRegistry.sol","start":8214},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"135:894:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"ReentrancyGuard","nameLocation":"1048:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":183,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:2","nodeType":"VariableDeclaration","scope":246,"src":"1818:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":186,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1864:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":188,"mutability":"mutable","name":"_status","nameLocation":"1923:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1907:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1937:52:2","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":191,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:2","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2028:2:2"},"src":"1994:37:2"},{"body":{"id":198,"nodeType":"Block","src":"2051:38:2","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":195,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2071:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":197,"nodeType":"ExpressionStatement","src":"2061:21:2"}]},"id":199,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2048:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2051:0:2"},"scope":246,"src":"2037:52:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"2490:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":202,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2500:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2500:21:2"},{"id":205,"nodeType":"PlaceholderStatement","src":"2531:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2542:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"2542:20:2"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2095:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":210,"name":"nonReentrant","nameLocation":"2475:12:2","nodeType":"ModifierDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"2487:2:2"},"src":"2466:103:2","virtual":false,"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"2614:268:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":213,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":214,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":220,"nodeType":"IfStatement","src":"2698:86:2","trueBody":{"id":219,"nodeType":"Block","src":"2722:62:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":216,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2743:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"RevertStatement","src":"2736:37:2"}]}},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":222,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":224,"nodeType":"ExpressionStatement","src":"2858:17:2"}]},"id":226,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:2","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2603:2:2"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2614:0:2"},"scope":246,"src":"2575:307:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":233,"nodeType":"Block","src":"2926:170:2","statements":[{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3068:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"3078:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"3068:21:2"}]},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:2","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"2915:2:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2926:0:2"},"scope":246,"src":"2888:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":244,"nodeType":"Block","src":"3339:42:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3356:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":241,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":239,"id":243,"nodeType":"Return","src":"3349:25:2"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3102:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:2","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3307:2:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"3333:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":237,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:2"},"scope":246,"src":"3275:106:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":247,"src":"1030:2353:2","usedErrors":[191],"usedEvents":[]}],"src":"109:3275:2"},"id":2},"contracts/MemoryRegistry.sol":{"ast":{"absolutePath":"contracts/MemoryRegistry.sol","exportedSymbols":{"Context":[177],"MemoryRegistry":[1249],"Ownable":[147],"ReentrancyGuard":[246]},"id":1250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":148,"src":"58:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":247,"src":"111:59:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":252,"name":"Ownable","nameLocations":["400:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"400:7:3"},"id":253,"nodeType":"InheritanceSpecifier","src":"400:7:3"},{"baseName":{"id":254,"name":"ReentrancyGuard","nameLocations":["409:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"409:15:3"},"id":255,"nodeType":"InheritanceSpecifier","src":"409:15:3"}],"canonicalName":"MemoryRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"172:200:3","text":" @title MemoryRegistry\n @dev Contract for anchoring memory hashes on 0G Chain for verifiability\n @notice This contract allows agents to commit memory hashes and verify them across agents"},"fullyImplemented":true,"id":1249,"linearizedBaseContracts":[1249,246,147,177],"name":"MemoryRegistry","nameLocation":"382:14:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MemoryRegistry.MemoryHash","id":275,"members":[{"constant":false,"id":257,"mutability":"mutable","name":"hash","nameLocation":"467:4:3","nodeType":"VariableDeclaration","scope":275,"src":"459:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"459:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"metadata","nameLocation":"488:8:3","nodeType":"VariableDeclaration","scope":275,"src":"481:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":258,"name":"string","nodeType":"ElementaryTypeName","src":"481:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"agent","nameLocation":"514:5:3","nodeType":"VariableDeclaration","scope":275,"src":"506:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"timestamp","nameLocation":"537:9:3","nodeType":"VariableDeclaration","scope":275,"src":"529:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"isActive","nameLocation":"561:8:3","nodeType":"VariableDeclaration","scope":275,"src":"556:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"556:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"zgStorageId","nameLocation":"586:11:3","nodeType":"VariableDeclaration","scope":275,"src":"579:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":266,"name":"string","nodeType":"ElementaryTypeName","src":"579:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"contentType","nameLocation":"640:11:3","nodeType":"VariableDeclaration","scope":275,"src":"633:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":268,"name":"string","nodeType":"ElementaryTypeName","src":"633:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"size","nameLocation":"709:4:3","nodeType":"VariableDeclaration","scope":275,"src":"701:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"tags","nameLocation":"762:4:3","nodeType":"VariableDeclaration","scope":275,"src":"753:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"753:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":273,"nodeType":"ArrayTypeName","src":"753:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"name":"MemoryHash","nameLocation":"438:10:3","nodeType":"StructDefinition","scope":1249,"src":"431:375:3","visibility":"public"},{"constant":false,"functionSelector":"4b31f22c","id":280,"mutability":"mutable","name":"memoryHashes","nameLocation":"873:12:3","nodeType":"VariableDeclaration","scope":1249,"src":"835:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash)"},"typeName":{"id":279,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"843:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"835:30:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":278,"nodeType":"UserDefinedTypeName","pathNode":{"id":277,"name":"MemoryHash","nameLocations":["854:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":275,"src":"854:10:3"},"referencedDeclaration":275,"src":"854:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage_ptr","typeString":"struct MemoryRegistry.MemoryHash"}}},"visibility":"public"},{"constant":false,"functionSelector":"5730e4c8","id":285,"mutability":"mutable","name":"agentMemories","nameLocation":"928:13:3","nodeType":"VariableDeclaration","scope":1249,"src":"891:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"typeName":{"id":284,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"891:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"910:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":283,"nodeType":"ArrayTypeName","src":"910:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"374146e2","id":289,"mutability":"mutable","name":"verifiedHashes","nameLocation":"979:14:3","nodeType":"VariableDeclaration","scope":1249,"src":"947:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":288,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"955:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"947:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":287,"name":"bool","nodeType":"ElementaryTypeName","src":"966:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f7e38666","id":293,"mutability":"mutable","name":"zgStorageToHash","nameLocation":"1033:15:3","nodeType":"VariableDeclaration","scope":1249,"src":"999:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string => bytes32)"},"typeName":{"id":292,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":290,"name":"string","nodeType":"ElementaryTypeName","src":"1007:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"999:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1017:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"f82e3dda","id":298,"mutability":"mutable","name":"tagToHashes","nameLocation":"1120:11:3","nodeType":"VariableDeclaration","scope":1249,"src":"1084:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string => bytes32[])"},"typeName":{"id":297,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":294,"name":"string","nodeType":"ElementaryTypeName","src":"1092:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1084:28:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1102:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":296,"nodeType":"ArrayTypeName","src":"1102:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"d121bf0f","id":302,"mutability":"mutable","name":"contentTypeCount","nameLocation":"1196:16:3","nodeType":"VariableDeclaration","scope":1249,"src":"1162:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":301,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":299,"name":"string","nodeType":"ElementaryTypeName","src":"1170:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1162:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"19abf3c7","id":305,"mutability":"mutable","name":"allMemoryHashes","nameLocation":"1261:15:3","nodeType":"VariableDeclaration","scope":1249,"src":"1244:32:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1244:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":304,"nodeType":"ArrayTypeName","src":"1244:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"public"},{"constant":false,"functionSelector":"30babdd4","id":308,"mutability":"mutable","name":"allTags","nameLocation":"1298:7:3","nodeType":"VariableDeclaration","scope":1249,"src":"1282:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":306,"name":"string","nodeType":"ElementaryTypeName","src":"1282:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":307,"nodeType":"ArrayTypeName","src":"1282:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"83607eb75a55050a03e80ae5461d2137edb1b40b3afe987401cb60e90039f7ce","id":322,"name":"MemoryHashCommitted","nameLocation":"1332:19:3","nodeType":"EventDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"1377:4:3","nodeType":"VariableDeclaration","scope":322,"src":"1361:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1361:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"agent","nameLocation":"1407:5:3","nodeType":"VariableDeclaration","scope":322,"src":"1391:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"1429:8:3","nodeType":"VariableDeclaration","scope":322,"src":"1422:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":313,"name":"string","nodeType":"ElementaryTypeName","src":"1422:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"zgStorageId","nameLocation":"1454:11:3","nodeType":"VariableDeclaration","scope":322,"src":"1447:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":315,"name":"string","nodeType":"ElementaryTypeName","src":"1447:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":false,"mutability":"mutable","name":"contentType","nameLocation":"1482:11:3","nodeType":"VariableDeclaration","scope":322,"src":"1475:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":317,"name":"string","nodeType":"ElementaryTypeName","src":"1475:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":320,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1511:9:3","nodeType":"VariableDeclaration","scope":322,"src":"1503:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1351:175:3"},"src":"1326:201:3"},{"anonymous":false,"eventSelector":"884dbc6cee9c8f554b4538d0257e260ee7330518c333079dd23af96fe728c59d","id":330,"name":"MemoryHashVerified","nameLocation":"1539:18:3","nodeType":"EventDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"1583:4:3","nodeType":"VariableDeclaration","scope":330,"src":"1567:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1567:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":326,"indexed":true,"mutability":"mutable","name":"verifier","nameLocation":"1613:8:3","nodeType":"VariableDeclaration","scope":330,"src":"1597:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"1597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":328,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1639:9:3","nodeType":"VariableDeclaration","scope":330,"src":"1631:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1557:97:3"},"src":"1533:122:3"},{"anonymous":false,"eventSelector":"be161f50dc26f188a4dbebd94be20156cb3c4827d2ed9e131a355ff32823677e","id":338,"name":"MemoryHashRevoked","nameLocation":"1667:17:3","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"1710:4:3","nodeType":"VariableDeclaration","scope":338,"src":"1694:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1694:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"agent","nameLocation":"1740:5:3","nodeType":"VariableDeclaration","scope":338,"src":"1724:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1763:9:3","nodeType":"VariableDeclaration","scope":338,"src":"1755:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1684:94:3"},"src":"1661:118:3"},{"anonymous":false,"eventSelector":"52ad1e0d7998f18fd8973f9ba5cb497388c6cdcb581980cfce9d8589d3948d50","id":347,"name":"MemoryTagged","nameLocation":"1791:12:3","nodeType":"EventDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"1829:4:3","nodeType":"VariableDeclaration","scope":347,"src":"1813:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1813:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":false,"mutability":"mutable","name":"tags","nameLocation":"1852:4:3","nodeType":"VariableDeclaration","scope":347,"src":"1843:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1843:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":342,"nodeType":"ArrayTypeName","src":"1843:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":345,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1874:9:3","nodeType":"VariableDeclaration","scope":347,"src":"1866:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1866:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1803:86:3"},"src":"1785:105:3"},{"anonymous":false,"eventSelector":"26e195fb36a9e7f1104eb490680eecc0d1cfab1970c26a47f527b076f2a14e69","id":355,"name":"MemoryIndexUpdated","nameLocation":"1902:18:3","nodeType":"EventDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"1946:4:3","nodeType":"VariableDeclaration","scope":355,"src":"1930:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1930:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":351,"indexed":false,"mutability":"mutable","name":"zgStorageId","nameLocation":"1967:11:3","nodeType":"VariableDeclaration","scope":355,"src":"1960:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":350,"name":"string","nodeType":"ElementaryTypeName","src":"1960:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":353,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1996:9:3","nodeType":"VariableDeclaration","scope":355,"src":"1988:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1920:91:3"},"src":"1896:116:3"},{"body":{"id":368,"nodeType":"Block","src":"2073:93:3","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":360,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2091:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":362,"indexExpression":{"id":361,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"2104:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2091:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2110:8:3","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":265,"src":"2091:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d6f72792068617368206973206e6f7420616374697665","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2120:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f83e481df0eee4015027e24bf872639a8f5c2f18659db1c3363718628ec19740","typeString":"literal_string \"Memory hash is not active\""},"value":"Memory hash is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f83e481df0eee4015027e24bf872639a8f5c2f18659db1c3363718628ec19740","typeString":"literal_string \"Memory hash is not active\""}],"id":359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2083:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2083:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"2083:65:3"},{"id":367,"nodeType":"PlaceholderStatement","src":"2158:1:3"}]},"id":369,"name":"onlyActiveHash","nameLocation":"2044:14:3","nodeType":"ModifierDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"hash","nameLocation":"2067:4:3","nodeType":"VariableDeclaration","scope":369,"src":"2059:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2059:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2058:14:3"},"src":"2035:131:3","virtual":false,"visibility":"internal"},{"body":{"id":385,"nodeType":"Block","src":"2209:146:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":374,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2240:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":376,"indexExpression":{"id":375,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2253:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2240:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2259:5:3","memberName":"agent","nodeType":"MemberAccess","referencedDeclaration":261,"src":"2240:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2268:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2272:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2268:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2240:38:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746865206f776e6572206f662074686973206d656d6f72792068617368","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2292:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_99e16862801ef6b5c1eea8b1c33b216de09364aaeafd28f070daea39959d2095","typeString":"literal_string \"Not the owner of this memory hash\""},"value":"Not the owner of this memory hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99e16862801ef6b5c1eea8b1c33b216de09364aaeafd28f070daea39959d2095","typeString":"literal_string \"Not the owner of this memory hash\""}],"id":373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2219:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:118:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"2219:118:3"},{"id":384,"nodeType":"PlaceholderStatement","src":"2347:1:3"}]},"id":386,"name":"onlyHashOwner","nameLocation":"2181:13:3","nodeType":"ModifierDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"hash","nameLocation":"2203:4:3","nodeType":"VariableDeclaration","scope":386,"src":"2195:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2195:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2194:14:3"},"src":"2172:183:3","virtual":false,"visibility":"internal"},{"body":{"id":393,"nodeType":"Block","src":"2395:2:3","statements":[]},"id":394,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2383:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2387:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2383:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":391,"kind":"baseConstructorSpecifier","modifierName":{"id":388,"name":"Ownable","nameLocations":["2375:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2375:7:3"},"nodeType":"ModifierInvocation","src":"2375:19:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[],"src":"2372:2:3"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[],"src":"2395:0:3"},"scope":1249,"src":"2361:36:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":545,"nodeType":"Block","src":"3067:1185:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3085:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3101:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3093:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:3","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3085:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642068617368","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3105:14:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","typeString":"literal_string \"Invalid hash\""},"value":"Invalid hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","typeString":"literal_string \"Invalid hash\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3077:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":424,"nodeType":"ExpressionStatement","src":"3077:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":426,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"3138:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":428,"indexExpression":{"id":427,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3151:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3138:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3157:4:3","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":257,"src":"3138:23:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3165:7:3","typeDescriptions":{}}},"id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3138:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4861736820616c726561647920657869737473","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3177:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb6dd0c9e3a17a0105e428afb3a17de720819eba40db3b469789c307b359af08","typeString":"literal_string \"Hash already exists\""},"value":"Hash already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb6dd0c9e3a17a0105e428afb3a17de720819eba40db3b469789c307b359af08","typeString":"literal_string \"Hash already exists\""}],"id":425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3130:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3130:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"3130:69:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":441,"name":"zgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3223:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3217:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":439,"name":"bytes","nodeType":"ElementaryTypeName","src":"3217:5:3","typeDescriptions":{}}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3236:6:3","memberName":"length","nodeType":"MemberAccess","src":"3217:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3245:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3217:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"30472053746f72616765204944207265717569726564","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3248:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f26f006409a8c497dc3725c512a8ad8453449f58cc83aa0fb992ce9aa56106ea","typeString":"literal_string \"0G Storage ID required\""},"value":"0G Storage ID required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f26f006409a8c497dc3725c512a8ad8453449f58cc83aa0fb992ce9aa56106ea","typeString":"literal_string \"0G Storage ID required\""}],"id":438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3209:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3209:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"3209:64:3"},{"assignments":[451],"declarations":[{"constant":false,"id":451,"mutability":"mutable","name":"newMemory","nameLocation":"3302:9:3","nodeType":"VariableDeclaration","scope":545,"src":"3284:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_memory_ptr","typeString":"struct MemoryRegistry.MemoryHash"},"typeName":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"MemoryHash","nameLocations":["3284:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":275,"src":"3284:10:3"},"referencedDeclaration":275,"src":"3284:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage_ptr","typeString":"struct MemoryRegistry.MemoryHash"}},"visibility":"internal"}],"id":465,"initialValue":{"arguments":[{"id":453,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3345:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":454,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"3373:8:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3402:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3402:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":457,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3437:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3443:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3437:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3476:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":460,"name":"zgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3507:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":461,"name":"contentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3545:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":462,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"3576:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":463,"name":"tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3600:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}],"id":452,"name":"MemoryHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3314:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MemoryHash_$275_storage_ptr_$","typeString":"type(struct MemoryRegistry.MemoryHash storage pointer)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3339:4:3","3363:8:3","3395:5:3","3426:9:3","3466:8:3","3494:11:3","3532:11:3","3570:4:3","3594:4:3"],"names":["hash","metadata","agent","timestamp","isActive","zgStorageId","contentType","size","tags"],"nodeType":"FunctionCall","src":"3314:301:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_memory_ptr","typeString":"struct MemoryRegistry.MemoryHash memory"}},"nodeType":"VariableDeclarationStatement","src":"3284:331:3"},{"expression":{"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":466,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"3626:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":468,"indexExpression":{"id":467,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3639:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3626:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":469,"name":"newMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"3647:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_memory_ptr","typeString":"struct MemoryRegistry.MemoryHash memory"}},"src":"3626:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":471,"nodeType":"ExpressionStatement","src":"3626:30:3"},{"expression":{"arguments":[{"id":477,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3697:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":472,"name":"agentMemories","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"3666:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":475,"indexExpression":{"expression":{"id":473,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3680:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3684:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3680:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3666:25:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3692:4:3","memberName":"push","nodeType":"MemberAccess","src":"3666:30:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3666:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"3666:36:3"},{"expression":{"arguments":[{"id":483,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3733:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":480,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3712:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3728:4:3","memberName":"push","nodeType":"MemberAccess","src":"3712:20:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3712:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"3712:26:3"},{"expression":{"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":486,"name":"zgStorageToHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"3783:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string memory => bytes32)"}},"id":488,"indexExpression":{"id":487,"name":"zgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3799:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3783:28:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":489,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3814:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3783:35:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":491,"nodeType":"ExpressionStatement","src":"3783:35:3"},{"body":{"id":518,"nodeType":"Block","src":"3896:91:3","statements":[{"expression":{"arguments":[{"id":509,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3936:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":503,"name":"tagToHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"3910:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string memory => bytes32[] storage ref)"}},"id":507,"indexExpression":{"baseExpression":{"id":504,"name":"tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3922:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":506,"indexExpression":{"id":505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3927:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3922:7:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3910:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:4:3","memberName":"push","nodeType":"MemberAccess","src":"3910:25:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3910:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"3910:31:3"},{"expression":{"arguments":[{"baseExpression":{"id":513,"name":"tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3968:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":515,"indexExpression":{"id":514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3973:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3968:7:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":512,"name":"_addTagIfNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"3955:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3955:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"ExpressionStatement","src":"3955:21:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3874:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":497,"name":"tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3878:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3883:6:3","memberName":"length","nodeType":"MemberAccess","src":"3878:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3874:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":519,"initializationExpression":{"assignments":[493],"declarations":[{"constant":false,"id":493,"mutability":"mutable","name":"i","nameLocation":"3867:1:3","nodeType":"VariableDeclaration","scope":519,"src":"3859:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3859:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":495,"initialValue":{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3871:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3859:13:3"},"loopExpression":{"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3891:3:3","subExpression":{"id":500,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3891:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":502,"nodeType":"ExpressionStatement","src":"3891:3:3"},"nodeType":"ForStatement","src":"3854:133:3"},{"expression":{"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4030:31:3","subExpression":{"baseExpression":{"id":520,"name":"contentTypeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4030:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":522,"indexExpression":{"id":521,"name":"contentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4047:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4030:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":524,"nodeType":"ExpressionStatement","src":"4030:31:3"},{"eventCall":{"arguments":[{"id":526,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4097:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4103:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4107:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4103:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4115:8:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":530,"name":"zgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"4125:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":531,"name":"contentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"4138:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":532,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4151:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4157:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"4151:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":525,"name":"MemoryHashCommitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"4077:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,string memory,string memory,string memory,uint256)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4077:90:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"EmitStatement","src":"4072:95:3"},{"eventCall":{"arguments":[{"id":537,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4195:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":538,"name":"tags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"4201:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},{"expression":{"id":539,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4207:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4213:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"4207:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":536,"name":"MemoryTagged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"4182:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,string memory[] memory,uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4182:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"EmitStatement","src":"4177:46:3"},{"expression":{"id":543,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4241:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":414,"id":544,"nodeType":"Return","src":"4234:11:3"}]},"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"2403:403:3","text":" @dev Commit a memory hash to the registry with 0G Storage integration\n @param hash The hash of the memory content\n @param metadata Additional metadata about the memory\n @param zgStorageId The 0G Storage identifier\n @param contentType Type of content (text, image, etc.)\n @param size Size of the content in bytes\n @param tags Tags for categorization"},"functionSelector":"732ac8cc","id":546,"implemented":true,"kind":"function","modifiers":[{"id":411,"kind":"modifierInvocation","modifierName":{"id":410,"name":"nonReentrant","nameLocations":["3036:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"3036:12:3"},"nodeType":"ModifierInvocation","src":"3036:12:3"}],"name":"commitMemoryHash","nameLocation":"2820:16:3","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"hash","nameLocation":"2854:4:3","nodeType":"VariableDeclaration","scope":546,"src":"2846:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2846:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"metadata","nameLocation":"2884:8:3","nodeType":"VariableDeclaration","scope":546,"src":"2868:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":398,"name":"string","nodeType":"ElementaryTypeName","src":"2868:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"zgStorageId","nameLocation":"2918:11:3","nodeType":"VariableDeclaration","scope":546,"src":"2902:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":400,"name":"string","nodeType":"ElementaryTypeName","src":"2902:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":403,"mutability":"mutable","name":"contentType","nameLocation":"2955:11:3","nodeType":"VariableDeclaration","scope":546,"src":"2939:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":402,"name":"string","nodeType":"ElementaryTypeName","src":"2939:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"size","nameLocation":"2984:4:3","nodeType":"VariableDeclaration","scope":546,"src":"2976:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"tags","nameLocation":"3016:4:3","nodeType":"VariableDeclaration","scope":546,"src":"2998:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"2998:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":407,"nodeType":"ArrayTypeName","src":"2998:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2836:190:3"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":546,"src":"3058:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3058:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3057:9:3"},"scope":1249,"src":"2811:1441:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":584,"nodeType":"Block","src":"4469:193:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":558,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"4487:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":560,"indexExpression":{"id":559,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4500:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4487:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4506:4:3","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":257,"src":"4487:23:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4522:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4514:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4514:7:3","typeDescriptions":{}}},"id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4514:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4487:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4861736820646f6573206e6f74206578697374","id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4526:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_61a671314b54cc23942463cbe3bd57d2873f5ada877a97cc89c3b58a20d49916","typeString":"literal_string \"Hash does not exist\""},"value":"Hash does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61a671314b54cc23942463cbe3bd57d2873f5ada877a97cc89c3b58a20d49916","typeString":"literal_string \"Hash does not exist\""}],"id":557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4479:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"4479:69:3"},{"expression":{"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":570,"name":"verifiedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4559:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":572,"indexExpression":{"id":571,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4574:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4559:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4582:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4559:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":575,"nodeType":"ExpressionStatement","src":"4559:27:3"},{"eventCall":{"arguments":[{"id":577,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4621:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4627:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4631:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4627:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":580,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4639:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4645:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"4639:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":576,"name":"MemoryHashVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"4602:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"EmitStatement","src":"4597:58:3"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"4258:109:3","text":" @dev Verify a memory hash (cross-agent verification)\n @param hash The hash to verify"},"functionSelector":"233e42ae","id":585,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":552,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4450:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":553,"kind":"modifierInvocation","modifierName":{"id":551,"name":"onlyActiveHash","nameLocations":["4435:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"4435:14:3"},"nodeType":"ModifierInvocation","src":"4435:20:3"},{"id":555,"kind":"modifierInvocation","modifierName":{"id":554,"name":"nonReentrant","nameLocations":["4456:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4456:12:3"},"nodeType":"ModifierInvocation","src":"4456:12:3"}],"name":"verifyMemoryHash","nameLocation":"4381:16:3","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"hash","nameLocation":"4415:4:3","nodeType":"VariableDeclaration","scope":585,"src":"4407:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4407:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4397:28:3"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"4469:0:3"},"scope":1249,"src":"4372:290:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":614,"nodeType":"Block","src":"4892:120:3","statements":[{"expression":{"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":599,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"4902:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":601,"indexExpression":{"id":600,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4915:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4902:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4921:8:3","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":265,"src":"4902:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4932:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4902:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":605,"nodeType":"ExpressionStatement","src":"4902:35:3"},{"eventCall":{"arguments":[{"id":607,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4971:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":608,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4977:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4981:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4977:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":610,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4989:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4995:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"4989:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":606,"name":"MemoryHashRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"4953:17:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4953:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"EmitStatement","src":"4948:57:3"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"4668:102:3","text":" @dev Revoke a memory hash (only by the owner)\n @param hash The hash to revoke"},"functionSelector":"7afb8065","id":615,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":591,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4853:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":592,"kind":"modifierInvocation","modifierName":{"id":590,"name":"onlyActiveHash","nameLocations":["4838:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"4838:14:3"},"nodeType":"ModifierInvocation","src":"4838:20:3"},{"arguments":[{"id":594,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4873:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":595,"kind":"modifierInvocation","modifierName":{"id":593,"name":"onlyHashOwner","nameLocations":["4859:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":386,"src":"4859:13:3"},"nodeType":"ModifierInvocation","src":"4859:19:3"},{"id":597,"kind":"modifierInvocation","modifierName":{"id":596,"name":"nonReentrant","nameLocations":["4879:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4879:12:3"},"nodeType":"ModifierInvocation","src":"4879:12:3"}],"name":"revokeMemoryHash","nameLocation":"4784:16:3","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"hash","nameLocation":"4818:4:3","nodeType":"VariableDeclaration","scope":615,"src":"4810:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4810:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4800:28:3"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"4892:0:3"},"scope":1249,"src":"4775:237:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":628,"nodeType":"Block","src":"5200:42:3","statements":[{"expression":{"baseExpression":{"id":624,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"5217:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":626,"indexExpression":{"id":625,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"5230:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5217:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"functionReturnParameters":623,"id":627,"nodeType":"Return","src":"5210:25:3"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"5018:84:3","text":" @dev Get memory hash details\n @param hash The hash to query"},"functionSelector":"077f9e19","id":629,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryHash","nameLocation":"5116:13:3","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"hash","nameLocation":"5147:4:3","nodeType":"VariableDeclaration","scope":629,"src":"5139:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5139:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5129:28:3"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":629,"src":"5181:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_memory_ptr","typeString":"struct MemoryRegistry.MemoryHash"},"typeName":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"MemoryHash","nameLocations":["5181:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":275,"src":"5181:10:3"},"referencedDeclaration":275,"src":"5181:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage_ptr","typeString":"struct MemoryRegistry.MemoryHash"}},"visibility":"internal"}],"src":"5180:19:3"},"scope":1249,"src":"5107:135:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":642,"nodeType":"Block","src":"5445:44:3","statements":[{"expression":{"baseExpression":{"id":638,"name":"agentMemories","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"5462:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":640,"indexExpression":{"id":639,"name":"agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5476:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5462:20:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":637,"id":641,"nodeType":"Return","src":"5455:27:3"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"5248:96:3","text":" @dev Get all memory hashes for an agent\n @param agent The agent address"},"functionSelector":"552338b3","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"getAgentMemories","nameLocation":"5358:16:3","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"agent","nameLocation":"5392:5:3","nodeType":"VariableDeclaration","scope":643,"src":"5384:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"5384:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5374:29:3"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"5427:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5427:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":635,"nodeType":"ArrayTypeName","src":"5427:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5426:18:3"},"scope":1249,"src":"5349:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":655,"nodeType":"Block","src":"5661:44:3","statements":[{"expression":{"baseExpression":{"id":651,"name":"verifiedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"5678:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":653,"indexExpression":{"id":652,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"5693:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5678:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":650,"id":654,"nodeType":"Return","src":"5671:27:3"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"5495:88:3","text":" @dev Check if a hash is verified\n @param hash The hash to check"},"functionSelector":"82482d41","id":656,"implemented":true,"kind":"function","modifiers":[],"name":"isMemoryHashVerified","nameLocation":"5597:20:3","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"hash","nameLocation":"5626:4:3","nodeType":"VariableDeclaration","scope":656,"src":"5618:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5618:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5617:14:3"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"5655:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"5655:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5654:6:3"},"scope":1249,"src":"5588:117:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":668,"nodeType":"Block","src":"5921:52:3","statements":[{"expression":{"baseExpression":{"id":664,"name":"zgStorageToHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"5938:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string memory => bytes32)"}},"id":666,"indexExpression":{"id":665,"name":"zgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5954:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5938:28:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":663,"id":667,"nodeType":"Return","src":"5931:35:3"}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"5711:108:3","text":" @dev Get memory hash by 0G Storage ID\n @param zgStorageId The 0G Storage identifier"},"functionSelector":"91ff9a1c","id":669,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryHashByZGStorageId","nameLocation":"5833:26:3","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"zgStorageId","nameLocation":"5876:11:3","nodeType":"VariableDeclaration","scope":669,"src":"5860:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":658,"name":"string","nodeType":"ElementaryTypeName","src":"5860:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5859:29:3"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":669,"src":"5912:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5912:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5911:9:3"},"scope":1249,"src":"5824:149:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":682,"nodeType":"Block","src":"6164:40:3","statements":[{"expression":{"baseExpression":{"id":678,"name":"tagToHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6181:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string memory => bytes32[] storage ref)"}},"id":680,"indexExpression":{"id":679,"name":"tag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6193:3:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6181:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":677,"id":681,"nodeType":"Return","src":"6174:23:3"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"5979:88:3","text":" @dev Get memory hashes by tag\n @param tag The tag to search for"},"functionSelector":"14205822","id":683,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryHashesByTag","nameLocation":"6081:20:3","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"tag","nameLocation":"6118:3:3","nodeType":"VariableDeclaration","scope":683,"src":"6102:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":671,"name":"string","nodeType":"ElementaryTypeName","src":"6102:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6101:21:3"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"6146:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6146:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":675,"nodeType":"ArrayTypeName","src":"6146:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6145:18:3"},"scope":1249,"src":"6072:132:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":757,"nodeType":"Block","src":"6437:471:3","statements":[{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"result","nameLocation":"6464:6:3","nodeType":"VariableDeclaration","scope":757,"src":"6447:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6447:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":695,"nodeType":"ArrayTypeName","src":"6447:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":704,"initialValue":{"arguments":[{"baseExpression":{"id":700,"name":"contentTypeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6487:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":702,"indexExpression":{"id":701,"name":"contentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6504:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6487:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6473:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6477:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":698,"nodeType":"ArrayTypeName","src":"6477:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6447:70:3"},{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"resultIndex","nameLocation":"6535:11:3","nodeType":"VariableDeclaration","scope":757,"src":"6527:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"6527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":708,"initialValue":{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6549:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6527:23:3"},{"body":{"id":753,"nodeType":"Block","src":"6622:248:3","statements":[{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"hash","nameLocation":"6644:4:3","nodeType":"VariableDeclaration","scope":753,"src":"6636:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6636:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":725,"initialValue":{"baseExpression":{"id":722,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6651:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":724,"indexExpression":{"id":723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6667:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6651:18:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6636:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":729,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"6703:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":731,"indexExpression":{"id":730,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"6716:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6703:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6722:11:3","memberName":"contentType","nodeType":"MemberAccess","referencedDeclaration":269,"src":"6703:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6697:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"6697:5:3","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6697:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":726,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6687:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6687:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":738,"name":"contentType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6755:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6749:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":736,"name":"bytes","nodeType":"ElementaryTypeName","src":"6749:5:3","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":735,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6739:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6687:81:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"nodeType":"IfStatement","src":"6683:177:3","trueBody":{"id":751,"nodeType":"Block","src":"6770:90:3","statements":[{"expression":{"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"6788:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":744,"indexExpression":{"id":743,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6795:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6788:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":745,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"6810:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6788:26:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":747,"nodeType":"ExpressionStatement","src":"6788:26:3"},{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6832:13:3","subExpression":{"id":748,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6832:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":750,"nodeType":"ExpressionStatement","src":"6832:13:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6589:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":714,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6593:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6609:6:3","memberName":"length","nodeType":"MemberAccess","src":"6593:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":754,"initializationExpression":{"assignments":[710],"declarations":[{"constant":false,"id":710,"mutability":"mutable","name":"i","nameLocation":"6582:1:3","nodeType":"VariableDeclaration","scope":754,"src":"6574:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"6574:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":712,"initialValue":{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6586:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6574:13:3"},"loopExpression":{"expression":{"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6617:3:3","subExpression":{"id":717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6617:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":719,"nodeType":"ExpressionStatement","src":"6617:3:3"},"nodeType":"ForStatement","src":"6569:301:3"},{"expression":{"id":755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"6895:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":691,"id":756,"nodeType":"Return","src":"6888:13:3"}]},"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"6210:114:3","text":" @dev Get memory hashes by content type\n @param contentType The content type to search for"},"functionSelector":"aaecbb35","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryHashesByContentType","nameLocation":"6338:28:3","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"contentType","nameLocation":"6383:11:3","nodeType":"VariableDeclaration","scope":758,"src":"6367:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":685,"name":"string","nodeType":"ElementaryTypeName","src":"6367:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6366:29:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"6419:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6419:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":689,"nodeType":"ArrayTypeName","src":"6419:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6418:18:3"},"scope":1249,"src":"6329:579:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":767,"nodeType":"Block","src":"7027:31:3","statements":[{"expression":{"id":765,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"7044:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":764,"id":766,"nodeType":"Return","src":"7037:14:3"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"6914:46:3","text":" @dev Get all available tags"},"functionSelector":"7038f157","id":768,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTags","nameLocation":"6974:10:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"6984:2:3"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"7010:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":761,"name":"string","nodeType":"ElementaryTypeName","src":"7010:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":762,"nodeType":"ArrayTypeName","src":"7010:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7009:17:3"},"scope":1249,"src":"6965:93:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":777,"nodeType":"Block","src":"7190:46:3","statements":[{"expression":{"expression":{"id":774,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"7207:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7223:6:3","memberName":"length","nodeType":"MemberAccess","src":"7207:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":773,"id":776,"nodeType":"Return","src":"7200:29:3"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"7064:57:3","text":" @dev Get total number of memory hashes"},"functionSelector":"efbc4e96","id":778,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalMemoryHashes","nameLocation":"7135:20:3","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"7155:2:3"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"7181:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"7181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7180:9:3"},"scope":1249,"src":"7126:110:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":798,"nodeType":"Block","src":"7447:118:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":787,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7465:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":788,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"7473:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7489:6:3","memberName":"length","nodeType":"MemberAccess","src":"7473:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7465:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e6473","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7497:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""},"value":"Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367","typeString":"literal_string \"Index out of bounds\""}],"id":786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7457:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"7457:62:3"},{"expression":{"baseExpression":{"id":794,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"7536:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":796,"indexExpression":{"id":795,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"7552:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7536:22:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":785,"id":797,"nodeType":"Return","src":"7529:29:3"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"7242:109:3","text":" @dev Get memory hash by index (for enumeration)\n @param index The index in the array"},"functionSelector":"440bc494","id":799,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryHashByIndex","nameLocation":"7365:20:3","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"index","nameLocation":"7403:5:3","nodeType":"VariableDeclaration","scope":799,"src":"7395:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"7395:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7385:29:3"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":799,"src":"7438:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7438:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7437:9:3"},"scope":1249,"src":"7356:209:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1047,"nodeType":"Block","src":"8257:1941:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":823,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8275:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8282:6:3","memberName":"length","nodeType":"MemberAccess","src":"8275:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":825,"name":"metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8292:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8302:6:3","memberName":"length","nodeType":"MemberAccess","src":"8292:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8275:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417272617973206c656e677468206d69736d61746368","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8310:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""},"value":"Arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""}],"id":822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8267:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8267:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"ExpressionStatement","src":"8267:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":832,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8353:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8360:6:3","memberName":"length","nodeType":"MemberAccess","src":"8353:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":834,"name":"zgStorageIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8370:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8383:6:3","memberName":"length","nodeType":"MemberAccess","src":"8370:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8353:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a472053746f7261676520494473206c656e677468206d69736d61746368","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8391:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fe54e334f0199c68c441525a7e4f360c79691e21b9eab678dffa3321ea1c5d47","typeString":"literal_string \"ZG Storage IDs length mismatch\""},"value":"ZG Storage IDs length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fe54e334f0199c68c441525a7e4f360c79691e21b9eab678dffa3321ea1c5d47","typeString":"literal_string \"ZG Storage IDs length mismatch\""}],"id":831,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8345:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8345:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"8345:79:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":841,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8442:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8449:6:3","memberName":"length","nodeType":"MemberAccess","src":"8442:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":843,"name":"contentTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"8459:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8472:6:3","memberName":"length","nodeType":"MemberAccess","src":"8459:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8442:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e74207479706573206c656e677468206d69736d61746368","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8480:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cdab3c6608b7f34ee320aafec6970f3ad7fb21535ef1bdd63cd940cc710459ec","typeString":"literal_string \"Content types length mismatch\""},"value":"Content types length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cdab3c6608b7f34ee320aafec6970f3ad7fb21535ef1bdd63cd940cc710459ec","typeString":"literal_string \"Content types length mismatch\""}],"id":840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8434:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"8434:78:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":850,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8530:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8537:6:3","memberName":"length","nodeType":"MemberAccess","src":"8530:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":852,"name":"sizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8547:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8553:6:3","memberName":"length","nodeType":"MemberAccess","src":"8547:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8530:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53697a6573206c656e677468206d69736d61746368","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8561:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2f9adcd20ad4761388a621ae872582247494dafa92507bcb46279c76d0ffdb1","typeString":"literal_string \"Sizes length mismatch\""},"value":"Sizes length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2f9adcd20ad4761388a621ae872582247494dafa92507bcb46279c76d0ffdb1","typeString":"literal_string \"Sizes length mismatch\""}],"id":849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8522:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8522:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"8522:63:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":859,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8603:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8610:6:3","memberName":"length","nodeType":"MemberAccess","src":"8603:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":861,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"8620:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata[] calldata"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8628:6:3","memberName":"length","nodeType":"MemberAccess","src":"8620:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8603:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54616773206c656e677468206d69736d61746368","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8636:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc0c60dfd22ad51af73e38afe3d18d1bc6bfa611e67acf116c40514efab15667","typeString":"literal_string \"Tags length mismatch\""},"value":"Tags length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc0c60dfd22ad51af73e38afe3d18d1bc6bfa611e67acf116c40514efab15667","typeString":"literal_string \"Tags length mismatch\""}],"id":858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"8595:64:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":868,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8677:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8684:6:3","memberName":"length","nodeType":"MemberAccess","src":"8677:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8693:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8677:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2068617368657320746f20636f6d6d6974","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8696:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_41b1778ae18c9772480dde4ed59ea87a62d11e5df7c1dd6e6150d245463810e1","typeString":"literal_string \"No hashes to commit\""},"value":"No hashes to commit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41b1778ae18c9772480dde4ed59ea87a62d11e5df7c1dd6e6150d245463810e1","typeString":"literal_string \"No hashes to commit\""}],"id":867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8669:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8669:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"8669:49:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":876,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8736:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8743:6:3","memberName":"length","nodeType":"MemberAccess","src":"8736:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3530","id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8753:2:3","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"8736:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820746f6f206c61726765","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8757:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91","typeString":"literal_string \"Batch too large\""},"value":"Batch too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91","typeString":"literal_string \"Batch too large\""}],"id":875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8728:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8728:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"ExpressionStatement","src":"8728:47:3"},{"body":{"id":1045,"nodeType":"Block","src":"8850:1342:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":894,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"8868:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":898,"indexExpression":{"baseExpression":{"id":895,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8881:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":897,"indexExpression":{"id":896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"8888:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8881:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8868:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8892:4:3","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":257,"src":"8868:28:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8908:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8900:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8900:7:3","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8900:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8868:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1044,"nodeType":"IfStatement","src":"8864:1318:3","trueBody":{"id":1043,"nodeType":"Block","src":"8912:1270:3","statements":[{"assignments":[907],"declarations":[{"constant":false,"id":907,"mutability":"mutable","name":"newMemory","nameLocation":"8948:9:3","nodeType":"VariableDeclaration","scope":1043,"src":"8930:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_memory_ptr","typeString":"struct MemoryRegistry.MemoryHash"},"typeName":{"id":906,"nodeType":"UserDefinedTypeName","pathNode":{"id":905,"name":"MemoryHash","nameLocations":["8930:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":275,"src":"8930:10:3"},"referencedDeclaration":275,"src":"8930:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage_ptr","typeString":"struct MemoryRegistry.MemoryHash"}},"visibility":"internal"}],"id":933,"initialValue":{"arguments":[{"baseExpression":{"id":909,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8999:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":911,"indexExpression":{"id":910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9006:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8999:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":912,"name":"metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"9040:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":914,"indexExpression":{"id":913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9050:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9040:12:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9081:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9085:6:3","memberName":"sender","nodeType":"MemberAccess","src":"9081:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":917,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9124:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9130:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"9124:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"id":920,"name":"zgStorageIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9210:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":922,"indexExpression":{"id":921,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9223:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9210:15:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":923,"name":"contentTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"9260:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":925,"indexExpression":{"id":924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9273:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9260:15:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":926,"name":"sizes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"9303:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":928,"indexExpression":{"id":927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9309:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9303:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":929,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9339:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata[] calldata"}},"id":931,"indexExpression":{"id":930,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9347:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9339:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}],"id":908,"name":"MemoryHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8960:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MemoryHash_$275_storage_ptr_$","typeString":"type(struct MemoryRegistry.MemoryHash storage pointer)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8993:4:3","9030:8:3","9074:5:3","9113:9:3","9161:8:3","9197:11:3","9247:11:3","9297:4:3","9333:4:3"],"names":["hash","metadata","agent","timestamp","isActive","zgStorageId","contentType","size","tags"],"nodeType":"FunctionCall","src":"8960:408:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_memory_ptr","typeString":"struct MemoryRegistry.MemoryHash memory"}},"nodeType":"VariableDeclarationStatement","src":"8930:438:3"},{"expression":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":934,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"9387:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":938,"indexExpression":{"baseExpression":{"id":935,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9400:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":937,"indexExpression":{"id":936,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9407:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9400:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9387:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":939,"name":"newMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9413:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_memory_ptr","typeString":"struct MemoryRegistry.MemoryHash memory"}},"src":"9387:35:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":941,"nodeType":"ExpressionStatement","src":"9387:35:3"},{"expression":{"arguments":[{"baseExpression":{"id":947,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9471:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":949,"indexExpression":{"id":948,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9478:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9471:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":942,"name":"agentMemories","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"9440:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":945,"indexExpression":{"expression":{"id":943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9454:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9458:6:3","memberName":"sender","nodeType":"MemberAccess","src":"9454:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9440:25:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9466:4:3","memberName":"push","nodeType":"MemberAccess","src":"9440:30:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9440:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"9440:41:3"},{"expression":{"arguments":[{"baseExpression":{"id":955,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9520:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":957,"indexExpression":{"id":956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9527:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9520:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":952,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"9499:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:4:3","memberName":"push","nodeType":"MemberAccess","src":"9499:20:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9499:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"9499:31:3"},{"expression":{"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":960,"name":"zgStorageToHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"9591:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string memory => bytes32)"}},"id":964,"indexExpression":{"baseExpression":{"id":961,"name":"zgStorageIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9607:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":963,"indexExpression":{"id":962,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9620:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9607:15:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9591:32:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":965,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9626:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":967,"indexExpression":{"id":966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9633:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9626:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9591:44:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":969,"nodeType":"ExpressionStatement","src":"9591:44:3"},{"body":{"id":1004,"nodeType":"Block","src":"9735:132:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":991,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9789:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":993,"indexExpression":{"id":992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9796:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9789:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":983,"name":"tagToHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9757:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(string memory => bytes32[] storage ref)"}},"id":989,"indexExpression":{"baseExpression":{"baseExpression":{"id":984,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9769:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata[] calldata"}},"id":986,"indexExpression":{"id":985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9777:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9769:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":988,"indexExpression":{"id":987,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"9780:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9769:13:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9757:26:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9784:4:3","memberName":"push","nodeType":"MemberAccess","src":"9757:31:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":995,"nodeType":"ExpressionStatement","src":"9757:42:3"},{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":997,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9834:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata[] calldata"}},"id":999,"indexExpression":{"id":998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9842:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9834:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":1001,"indexExpression":{"id":1000,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"9845:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9834:13:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":996,"name":"_addTagIfNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"9821:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9821:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"9821:27:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"9707:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":975,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9711:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata[] calldata"}},"id":977,"indexExpression":{"id":976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9719:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9711:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9722:6:3","memberName":"length","nodeType":"MemberAccess","src":"9711:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9707:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"initializationExpression":{"assignments":[971],"declarations":[{"constant":false,"id":971,"mutability":"mutable","name":"j","nameLocation":"9700:1:3","nodeType":"VariableDeclaration","scope":1005,"src":"9692:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"9692:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":973,"initialValue":{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9704:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9692:13:3"},"loopExpression":{"expression":{"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9730:3:3","subExpression":{"id":980,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"9730:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":982,"nodeType":"ExpressionStatement","src":"9730:3:3"},"nodeType":"ForStatement","src":"9687:180:3"},{"expression":{"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9926:35:3","subExpression":{"baseExpression":{"id":1006,"name":"contentTypeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"9926:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":1010,"indexExpression":{"baseExpression":{"id":1007,"name":"contentTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"9943:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":1009,"indexExpression":{"id":1008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9956:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9943:15:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9926:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1012,"nodeType":"ExpressionStatement","src":"9926:35:3"},{"eventCall":{"arguments":[{"baseExpression":{"id":1014,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10005:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1016,"indexExpression":{"id":1015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10012:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10005:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1017,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10016:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10020:6:3","memberName":"sender","nodeType":"MemberAccess","src":"10016:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1019,"name":"metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"10028:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":1021,"indexExpression":{"id":1020,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10038:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10028:12:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":1022,"name":"zgStorageIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"10042:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":1024,"indexExpression":{"id":1023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10055:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10042:15:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":1025,"name":"contentTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10059:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":1027,"indexExpression":{"id":1026,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10072:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10059:15:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":1028,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10076:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10082:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"10076:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1013,"name":"MemoryHashCommitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"9985:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,string memory,string memory,string memory,uint256)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9985:107:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"EmitStatement","src":"9980:112:3"},{"eventCall":{"arguments":[{"baseExpression":{"id":1033,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"10128:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1035,"indexExpression":{"id":1034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10135:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10128:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1036,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"10139:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata[] calldata"}},"id":1038,"indexExpression":{"id":1037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10147:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10139:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},{"expression":{"id":1039,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10151:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10157:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"10151:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1032,"name":"MemoryTagged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"10115:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,string memory[] memory,uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10115:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"EmitStatement","src":"10110:57:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"8826:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":888,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8830:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8837:6:3","memberName":"length","nodeType":"MemberAccess","src":"8830:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8826:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1046,"initializationExpression":{"assignments":[884],"declarations":[{"constant":false,"id":884,"mutability":"mutable","name":"i","nameLocation":"8819:1:3","nodeType":"VariableDeclaration","scope":1046,"src":"8811:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"8811:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":886,"initialValue":{"hexValue":"30","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8823:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8811:13:3"},"loopExpression":{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8845:3:3","subExpression":{"id":891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"8845:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":893,"nodeType":"ExpressionStatement","src":"8845:3:3"},"nodeType":"ForStatement","src":"8806:1386:3"}]},"documentation":{"id":800,"nodeType":"StructuredDocumentation","src":"7571:410:3","text":" @dev Batch commit multiple memory hashes with 0G Storage integration\n @param hashes Array of hashes to commit\n @param metadatas Array of metadata corresponding to hashes\n @param zgStorageIds Array of 0G Storage identifiers\n @param contentTypes Array of content types\n @param sizes Array of content sizes\n @param allTags Array of tag arrays for each memory"},"functionSelector":"a6ce4fc5","id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"batchCommitMemoryHashes","nameLocation":"7995:23:3","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"hashes","nameLocation":"8047:6:3","nodeType":"VariableDeclaration","scope":1048,"src":"8028:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8028:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":802,"nodeType":"ArrayTypeName","src":"8028:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"metadatas","nameLocation":"8081:9:3","nodeType":"VariableDeclaration","scope":1048,"src":"8063:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":804,"name":"string","nodeType":"ElementaryTypeName","src":"8063:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":805,"nodeType":"ArrayTypeName","src":"8063:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":809,"mutability":"mutable","name":"zgStorageIds","nameLocation":"8118:12:3","nodeType":"VariableDeclaration","scope":1048,"src":"8100:30:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":807,"name":"string","nodeType":"ElementaryTypeName","src":"8100:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":808,"nodeType":"ArrayTypeName","src":"8100:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"contentTypes","nameLocation":"8158:12:3","nodeType":"VariableDeclaration","scope":1048,"src":"8140:30:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":810,"name":"string","nodeType":"ElementaryTypeName","src":"8140:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":811,"nodeType":"ArrayTypeName","src":"8140:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"sizes","nameLocation":"8199:5:3","nodeType":"VariableDeclaration","scope":1048,"src":"8180:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"8180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ArrayTypeName","src":"8180:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"allTags","nameLocation":"8234:7:3","nodeType":"VariableDeclaration","scope":1048,"src":"8214:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"string[][]"},"typeName":{"baseType":{"baseType":{"id":816,"name":"string","nodeType":"ElementaryTypeName","src":"8214:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":817,"nodeType":"ArrayTypeName","src":"8214:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"id":818,"nodeType":"ArrayTypeName","src":"8214:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$dyn_storage_$dyn_storage_ptr","typeString":"string[][]"}},"visibility":"internal"}],"src":"8018:229:3"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"8257:0:3"},"scope":1249,"src":"7986:2212:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1134,"nodeType":"Block","src":"10526:622:3","statements":[{"expression":{"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1062,"name":"totalMemories","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"10536:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1063,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"10552:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10568:6:3","memberName":"length","nodeType":"MemberAccess","src":"10552:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10536:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1066,"nodeType":"ExpressionStatement","src":"10536:38:3"},{"expression":{"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1067,"name":"totalTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"10584:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1068,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"10596:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10604:6:3","memberName":"length","nodeType":"MemberAccess","src":"10596:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10584:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1071,"nodeType":"ExpressionStatement","src":"10584:26:3"},{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"activeCount","nameLocation":"10629:11:3","nodeType":"VariableDeclaration","scope":1134,"src":"10621:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"10621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1075,"initialValue":{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10643:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10621:23:3"},{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"verifiedCount","nameLocation":"10662:13:3","nodeType":"VariableDeclaration","scope":1134,"src":"10654:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1079,"initialValue":{"hexValue":"30","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10678:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10654:25:3"},{"assignments":[1081],"declarations":[{"constant":false,"id":1081,"mutability":"mutable","name":"sizeSum","nameLocation":"10697:7:3","nodeType":"VariableDeclaration","scope":1134,"src":"10689:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"10689:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1083,"initialValue":{"hexValue":"30","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10707:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10689:19:3"},{"body":{"id":1125,"nodeType":"Block","src":"10772:289:3","statements":[{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"hash","nameLocation":"10794:4:3","nodeType":"VariableDeclaration","scope":1125,"src":"10786:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10786:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1100,"initialValue":{"baseExpression":{"id":1097,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"10801:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1099,"indexExpression":{"id":1098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"10817:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10801:18:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10786:33:3"},{"condition":{"expression":{"baseExpression":{"id":1101,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"10837:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":1103,"indexExpression":{"id":1102,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"10850:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10837:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":1104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10856:8:3","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":265,"src":"10837:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1116,"nodeType":"IfStatement","src":"10833:131:3","trueBody":{"id":1115,"nodeType":"Block","src":"10866:98:3","statements":[{"expression":{"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10884:13:3","subExpression":{"id":1105,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"10884:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1107,"nodeType":"ExpressionStatement","src":"10884:13:3"},{"expression":{"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1108,"name":"sizeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"10915:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1109,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"10926:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":1111,"indexExpression":{"id":1110,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"10939:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10926:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10945:4:3","memberName":"size","nodeType":"MemberAccess","referencedDeclaration":271,"src":"10926:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10915:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1114,"nodeType":"ExpressionStatement","src":"10915:34:3"}]}},{"condition":{"baseExpression":{"id":1117,"name":"verifiedHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"10981:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1119,"indexExpression":{"id":1118,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"10996:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10981:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1124,"nodeType":"IfStatement","src":"10977:74:3","trueBody":{"id":1123,"nodeType":"Block","src":"11003:48:3","statements":[{"expression":{"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11021:15:3","subExpression":{"id":1120,"name":"verifiedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"11021:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1122,"nodeType":"ExpressionStatement","src":"11021:15:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"10739:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1089,"name":"allMemoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"10743:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10759:6:3","memberName":"length","nodeType":"MemberAccess","src":"10743:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10739:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1126,"initializationExpression":{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"i","nameLocation":"10732:1:3","nodeType":"VariableDeclaration","scope":1126,"src":"10724:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"10724:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"hexValue":"30","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10736:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10724:13:3"},"loopExpression":{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10767:3:3","subExpression":{"id":1092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"10767:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"10767:3:3"},"nodeType":"ForStatement","src":"10719:342:3"},{"expression":{"components":[{"id":1127,"name":"totalMemories","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"11079:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1128,"name":"activeCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"11094:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1129,"name":"verifiedCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"11107:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1130,"name":"totalTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"11122:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1131,"name":"sizeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"11133:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11078:63:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256)"}},"functionReturnParameters":1061,"id":1133,"nodeType":"Return","src":"11071:70:3"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"10204:59:3","text":" @dev Get comprehensive memory statistics"},"functionSelector":"fd098e1e","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryStats","nameLocation":"10277:14:3","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"10291:2:3"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"totalMemories","nameLocation":"10362:13:3","nodeType":"VariableDeclaration","scope":1135,"src":"10354:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"10354:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"activeMemories","nameLocation":"10397:14:3","nodeType":"VariableDeclaration","scope":1135,"src":"10389:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10389:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"verifiedMemories","nameLocation":"10433:16:3","nodeType":"VariableDeclaration","scope":1135,"src":"10425:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"10425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"totalTags","nameLocation":"10471:9:3","nodeType":"VariableDeclaration","scope":1135,"src":"10463:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"10463:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"totalSize","nameLocation":"10502:9:3","nodeType":"VariableDeclaration","scope":1135,"src":"10494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"10494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10340:181:3"},"scope":1249,"src":"10268:880:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1178,"nodeType":"Block","src":"11266:271:3","statements":[{"body":{"id":1170,"nodeType":"Block","src":"11360:144:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"baseExpression":{"id":1155,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"11394:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":1157,"indexExpression":{"id":1156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"11402:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11394:10:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11388:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1153,"name":"bytes","nodeType":"ElementaryTypeName","src":"11388:5:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11388:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1152,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11378:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11378:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1163,"name":"tag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"11426:3:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1161,"name":"bytes","nodeType":"ElementaryTypeName","src":"11420:5:3","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11420:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1160,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11410:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11410:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"11378:53:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1169,"nodeType":"IfStatement","src":"11374:120:3","trueBody":{"id":1168,"nodeType":"Block","src":"11433:61:3","statements":[{"functionReturnParameters":1140,"id":1167,"nodeType":"Return","src":"11451:7:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"11335:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1146,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"11339:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11347:6:3","memberName":"length","nodeType":"MemberAccess","src":"11339:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11335:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1171,"initializationExpression":{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"i","nameLocation":"11328:1:3","nodeType":"VariableDeclaration","scope":1171,"src":"11320:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"11320:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11332:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11320:13:3"},"loopExpression":{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11355:3:3","subExpression":{"id":1149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"11355:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"11355:3:3"},"nodeType":"ForStatement","src":"11315:189:3"},{"expression":{"arguments":[{"id":1175,"name":"tag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"11526:3:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1172,"name":"allTags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"11513:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11521:4:3","memberName":"push","nodeType":"MemberAccess","src":"11513:12:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"ExpressionStatement","src":"11513:17:3"}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"11154:58:3","text":" @dev Private function to add tag if new"},"id":1179,"implemented":true,"kind":"function","modifiers":[],"name":"_addTagIfNew","nameLocation":"11226:12:3","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"tag","nameLocation":"11253:3:3","nodeType":"VariableDeclaration","scope":1179,"src":"11239:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1137,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11238:19:3"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"11266:0:3"},"scope":1249,"src":"11217:320:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1247,"nodeType":"Block","src":"11881:541:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1198,"name":"newZgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"11905:14:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11899:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"11899:5:3","typeDescriptions":{}}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11899:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11921:6:3","memberName":"length","nodeType":"MemberAccess","src":"11899:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11930:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11899:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642030472053746f72616765204944","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11933:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_28b4a3fa6cda68d8150605bc9fccce8a8168e6183cdf605c188a25dd9829de3d","typeString":"literal_string \"Invalid 0G Storage ID\""},"value":"Invalid 0G Storage ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_28b4a3fa6cda68d8150605bc9fccce8a8168e6183cdf605c188a25dd9829de3d","typeString":"literal_string \"Invalid 0G Storage ID\""}],"id":1195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11891:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11891:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"11891:66:3"},{"assignments":[1207],"declarations":[{"constant":false,"id":1207,"mutability":"mutable","name":"oldZgStorageId","nameLocation":"12030:14:3","nodeType":"VariableDeclaration","scope":1247,"src":"12016:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1206,"name":"string","nodeType":"ElementaryTypeName","src":"12016:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1212,"initialValue":{"expression":{"baseExpression":{"id":1208,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"12047:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":1210,"indexExpression":{"id":1209,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"12060:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12047:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":1211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12066:11:3","memberName":"zgStorageId","nodeType":"MemberAccess","referencedDeclaration":267,"src":"12047:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12016:61:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1215,"name":"oldZgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"12097:14:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12091:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"12091:5:3","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12091:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12113:6:3","memberName":"length","nodeType":"MemberAccess","src":"12091:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12122:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12091:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1226,"nodeType":"IfStatement","src":"12087:101:3","trueBody":{"id":1225,"nodeType":"Block","src":"12125:63:3","statements":[{"expression":{"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"12139:38:3","subExpression":{"baseExpression":{"id":1220,"name":"zgStorageToHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"12146:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string memory => bytes32)"}},"id":1222,"indexExpression":{"id":1221,"name":"oldZgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"12162:14:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12146:31:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"12139:38:3"}]}},{"expression":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1227,"name":"memoryHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"12239:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MemoryHash_$275_storage_$","typeString":"mapping(bytes32 => struct MemoryRegistry.MemoryHash storage ref)"}},"id":1229,"indexExpression":{"id":1228,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"12252:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12239:18:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryHash_$275_storage","typeString":"struct MemoryRegistry.MemoryHash storage ref"}},"id":1230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12258:11:3","memberName":"zgStorageId","nodeType":"MemberAccess","referencedDeclaration":267,"src":"12239:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1231,"name":"newZgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"12272:14:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"12239:47:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1233,"nodeType":"ExpressionStatement","src":"12239:47:3"},{"expression":{"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1234,"name":"zgStorageToHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"12296:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bytes32_$","typeString":"mapping(string memory => bytes32)"}},"id":1236,"indexExpression":{"id":1235,"name":"newZgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"12312:14:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12296:31:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1237,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"12330:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12296:38:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1239,"nodeType":"ExpressionStatement","src":"12296:38:3"},{"eventCall":{"arguments":[{"id":1241,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"12377:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1242,"name":"newZgStorageId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"12383:14:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":1243,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12399:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12405:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"12399:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1240,"name":"MemoryIndexUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"12358:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,string memory,uint256)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"EmitStatement","src":"12353:62:3"}]},"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"11543:175:3","text":" @dev Update 0G Storage ID for existing memory (for migration purposes)\n @param hash The memory hash\n @param newZgStorageId The new 0G Storage ID"},"functionSelector":"3ea60080","id":1248,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1187,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"11842:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1188,"kind":"modifierInvocation","modifierName":{"id":1186,"name":"onlyActiveHash","nameLocations":["11827:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":369,"src":"11827:14:3"},"nodeType":"ModifierInvocation","src":"11827:20:3"},{"arguments":[{"id":1190,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"11862:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1191,"kind":"modifierInvocation","modifierName":{"id":1189,"name":"onlyHashOwner","nameLocations":["11848:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":386,"src":"11848:13:3"},"nodeType":"ModifierInvocation","src":"11848:19:3"},{"id":1193,"kind":"modifierInvocation","modifierName":{"id":1192,"name":"nonReentrant","nameLocations":["11868:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"11868:12:3"},"nodeType":"ModifierInvocation","src":"11868:12:3"}],"name":"updateZGStorageId","nameLocation":"11732:17:3","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"hash","nameLocation":"11767:4:3","nodeType":"VariableDeclaration","scope":1248,"src":"11759:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11759:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"newZgStorageId","nameLocation":"11797:14:3","nodeType":"VariableDeclaration","scope":1248,"src":"11781:30:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1183,"name":"string","nodeType":"ElementaryTypeName","src":"11781:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11749:68:3"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[],"src":"11881:0:3"},"scope":1249,"src":"11723:699:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1250,"src":"373:12051:3","usedErrors":[13,18,191],"usedEvents":[24,322,330,338,347,355]}],"src":"32:12393:3"},"id":3}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"contracts/MemoryRegistry.sol":{"MemoryRegistry":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"agent","type":"address"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"},{"indexed":false,"internalType":"string","name":"zgStorageId","type":"string"},{"indexed":false,"internalType":"string","name":"contentType","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MemoryHashCommitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"agent","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MemoryHashRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"verifier","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MemoryHashVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"zgStorageId","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MemoryIndexUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":false,"internalType":"string[]","name":"tags","type":"string[]"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MemoryTagged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"agentMemories","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allMemoryHashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allTags","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"},{"internalType":"string[]","name":"metadatas","type":"string[]"},{"internalType":"string[]","name":"zgStorageIds","type":"string[]"},{"internalType":"string[]","name":"contentTypes","type":"string[]"},{"internalType":"uint256[]","name":"sizes","type":"uint256[]"},{"internalType":"string[][]","name":"allTags","type":"string[][]"}],"name":"batchCommitMemoryHashes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"zgStorageId","type":"string"},{"internalType":"string","name":"contentType","type":"string"},{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"string[]","name":"tags","type":"string[]"}],"name":"commitMemoryHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"contentTypeCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"agent","type":"address"}],"name":"getAgentMemories","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllTags","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"getMemoryHash","outputs":[{"components":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"address","name":"agent","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"zgStorageId","type":"string"},{"internalType":"string","name":"contentType","type":"string"},{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"string[]","name":"tags","type":"string[]"}],"internalType":"struct MemoryRegistry.MemoryHash","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getMemoryHashByIndex","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"zgStorageId","type":"string"}],"name":"getMemoryHashByZGStorageId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"contentType","type":"string"}],"name":"getMemoryHashesByContentType","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tag","type":"string"}],"name":"getMemoryHashesByTag","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMemoryStats","outputs":[{"internalType":"uint256","name":"totalMemories","type":"uint256"},{"internalType":"uint256","name":"activeMemories","type":"uint256"},{"internalType":"uint256","name":"verifiedMemories","type":"uint256"},{"internalType":"uint256","name":"totalTags","type":"uint256"},{"internalType":"uint256","name":"totalSize","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalMemoryHashes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"isMemoryHashVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"memoryHashes","outputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"address","name":"agent","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"string","name":"zgStorageId","type":"string"},{"internalType":"string","name":"contentType","type":"string"},{"internalType":"uint256","name":"size","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"revokeMemoryHash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"tagToHashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"string","name":"newZgStorageId","type":"string"}],"name":"updateZGStorageId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"verifiedHashes","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"verifyMemoryHash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"zgStorageToHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x7E JUMPI CALLER ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH2 0x2496 SWAP1 DUP2 PUSH2 0x84 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x77F9E19 EQ PUSH2 0x1A10 JUMPI POP DUP1 PUSH4 0x14205822 EQ PUSH2 0x1980 JUMPI DUP1 PUSH4 0x19ABF3C7 EQ PUSH2 0x1957 JUMPI DUP1 PUSH4 0x233E42AE EQ PUSH2 0x1887 JUMPI DUP1 PUSH4 0x30BABDD4 EQ PUSH2 0x181C JUMPI DUP1 PUSH4 0x374146E2 EQ PUSH2 0xCF9 JUMPI DUP1 PUSH4 0x3EA60080 EQ PUSH2 0x15C2 JUMPI DUP1 PUSH4 0x440BC494 EQ PUSH2 0x155E JUMPI DUP1 PUSH4 0x4B31F22C EQ PUSH2 0x146D JUMPI DUP1 PUSH4 0x552338B3 EQ PUSH2 0x13E9 JUMPI DUP1 PUSH4 0x5730E4C8 EQ PUSH2 0x1390 JUMPI DUP1 PUSH4 0x7038F157 EQ PUSH2 0x129F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1246 JUMPI DUP1 PUSH4 0x732AC8CC EQ PUSH2 0xDD3 JUMPI DUP1 PUSH4 0x7AFB8065 EQ PUSH2 0xD2A JUMPI DUP1 PUSH4 0x82482D41 EQ PUSH2 0xCF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCD0 JUMPI DUP1 PUSH4 0x91FF9A1C EQ PUSH2 0xC7F JUMPI DUP1 PUSH4 0xA6CE4FC5 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xAAECBB35 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xD121BF0F EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xEFBC4E96 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF7E38666 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xF82E3DDA EQ PUSH2 0x237 JUMPI PUSH4 0xFD098E1E EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP3 SWAP1 DUP2 DUP1 JUMPDEST DUP5 DUP2 LT PUSH2 0x184 JUMPI POP PUSH1 0xA0 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x18D DUP2 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 SWAP1 PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE PUSH1 0xFF SWAP3 DUP4 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1EC JUMPI JUMPDEST POP SWAP1 PUSH1 0x4 SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D7 JUMPI JUMPDEST PUSH2 0x1D2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST SWAP1 PUSH2 0x1E4 PUSH2 0x1D2 SWAP2 PUSH2 0x2188 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1C9 JUMP JUMPDEST SWAP9 PUSH2 0x1FA SWAP1 SWAP8 SWAP3 SWAP2 SWAP8 PUSH2 0x2188 JUMP JUMPDEST SWAP9 DUP8 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21C JUMPI SWAP1 SWAP6 PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x267 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F34 JUMP JUMPDEST PUSH2 0x283 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x232 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x2A2 SWAP2 PUSH2 0x1D83 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x2F9 PUSH1 0x20 PUSH2 0x2E6 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F34 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x325 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x32D PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x3E9 PUSH1 0x20 PUSH2 0x2E6 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F34 JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x42D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP4 DUP3 CALLDATACOPY DUP4 DUP2 DUP4 DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD SWAP2 PUSH2 0x44C DUP4 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 PUSH2 0x45A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1E87 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x469 PUSH1 0x1F NOT SWAP2 PUSH2 0x1F7E JUMP JUMPDEST ADD CALLDATASIZE DUP6 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x8 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x48F DUP9 DUP3 PUSH2 0x1CDA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x49C DUP2 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP9 MSTORE PUSH2 0x4C5 PUSH2 0x4CC PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP3 PUSH2 0x1E87 JUMP JUMPDEST DUP9 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x4DD CALLDATASIZE DUP6 DUP8 PUSH2 0x1EEE JUMP JUMPDEST DUP10 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x4F8 JUMPI JUMPDEST POP PUSH2 0x4F3 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST DUP7 SWAP5 SWAP2 SWAP5 MLOAD DUP3 LT ISZERO PUSH2 0x521 JUMPI DUP2 PUSH2 0x51A SWAP2 DUP10 PUSH2 0x4F3 SWAP5 PUSH1 0x5 SHL DUP11 ADD ADD MSTORE PUSH2 0x2188 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x4E9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x568 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x581 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x59C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x64 SWAP7 SWAP2 SWAP7 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x5B7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x84 SWAP8 SWAP2 SWAP8 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x5D2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP9 SWAP1 SWAP7 PUSH1 0xA4 CALLDATALOAD GT PUSH2 0x232 JUMPI PUSH2 0x5EC CALLDATASIZE PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP11 SWAP1 SWAP8 DUP10 DUP8 SUB PUSH2 0xC41 JUMPI DUP6 DUP8 SUB PUSH2 0xBFC JUMPI DUP4 DUP8 SUB PUSH2 0xBB7 JUMPI DUP11 DUP8 SUB PUSH2 0xB7A JUMPI DUP12 DUP8 SUB PUSH2 0xB3E JUMPI DUP7 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x32 DUP8 GT PUSH2 0xACC JUMPI PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x62C JUMPI STOP JUMPDEST PUSH2 0x637 DUP2 DUP10 DUP12 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP13 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x65C JUMPI JUMPDEST POP PUSH2 0x657 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST SWAP12 DUP8 DUP5 DUP14 SWAP15 DUP5 SWAP15 SWAP6 SWAP5 DUP15 DUP10 DUP16 DUP16 DUP5 DUP16 DUP16 SWAP4 PUSH2 0x67A DUP4 DUP1 SWAP6 DUP2 SWAP4 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP14 PUSH2 0x685 SWAP3 PUSH2 0x2197 JUMP JUMPDEST SWAP10 PUSH2 0x691 SWAP3 SWAP2 SWAP10 PUSH2 0x2197 JUMP JUMPDEST SWAP3 PUSH2 0x69D SWAP3 SWAP2 SWAP5 PUSH2 0x2197 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x6AB DUP2 DUP12 DUP14 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP7 PUSH2 0x6B6 SWAP3 PUSH2 0x239F JUMP JUMPDEST SWAP7 SWAP1 SWAP8 PUSH1 0x40 MLOAD SWAP12 PUSH2 0x6C6 DUP14 PUSH2 0x1E6B JUMP JUMPDEST DUP13 MSTORE CALLDATASIZE SWAP1 PUSH2 0x6D3 SWAP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE CALLER PUSH1 0x40 DUP12 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD PUSH1 0x1 SWAP1 MSTORE CALLDATASIZE SWAP1 PUSH2 0x6F7 SWAP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x707 SWAP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x71C SWAP3 PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x72D DUP13 DUP11 DUP13 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SWAP1 PUSH2 0x753 SWAP2 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x7B4 SWAP1 PUSH1 0x5 DUP7 ADD PUSH2 0x2062 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x7C6 SWAP1 PUSH1 0x6 DUP7 ADD PUSH2 0x2062 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xAB6 JUMPI DUP16 SWAP4 DUP13 DUP16 SWAP3 DUP16 SWAP8 DUP15 SWAP4 PUSH1 0x8 DUP3 ADD SLOAD DUP4 PUSH1 0x8 DUP5 ADD SSTORE DUP1 DUP5 LT PUSH2 0xA3D JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x8 SWAP2 ADD SWAP2 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xA20 JUMPI POP POP POP POP DUP3 PUSH1 0x20 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH2 0x875 SWAP3 PUSH2 0x86C SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x3 DUP7 MSTORE PUSH2 0x853 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x84C DUP6 DUP6 DUP6 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x867 PUSH2 0x861 DUP5 DUP5 DUP5 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD PUSH2 0x2129 JUMP JUMPDEST PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP3 DUP12 DUP9 PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE DUP11 PUSH2 0x899 DUP14 DUP6 PUSH1 0x0 SWAP4 PUSH2 0x239F JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x91B JUMPI SWAP1 PUSH2 0x899 DUP14 DUP6 PUSH2 0x912 DUP16 SWAP8 SWAP7 SWAP6 DUP16 DUP16 PUSH2 0x901 DUP4 PUSH2 0x8DB DUP9 DUP9 DUP16 PUSH2 0x8FC PUSH2 0x90D SWAP9 PUSH2 0x84C DUP6 PUSH2 0x908 SWAP11 PUSH1 0x20 PUSH2 0x8E1 DUP12 PUSH2 0x8DB DUP6 DUP12 DUP12 PUSH2 0x239F JUMP JUMPDEST SWAP1 PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH2 0x238F JUMP JUMPDEST PUSH2 0x239F JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x2188 JUMP JUMPDEST SWAP4 SWAP5 SWAP6 SWAP7 PUSH2 0x239F JUMP JUMPDEST POP SWAP2 SWAP11 DUP11 PUSH32 0x52AD1E0D7998F18FD8973F9BA5CB497388C6CDCB581980CFCE9D8589D3948D50 PUSH2 0xA04 PUSH2 0x657 SWAP5 SWAP16 SWAP15 DUP16 SWAP1 PUSH2 0x9FD DUP16 DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP16 SWAP4 DUP16 DUP16 SWAP6 DUP2 PUSH2 0x9F5 DUP16 SWAP12 SWAP9 PUSH2 0x9E4 DUP14 PUSH2 0x9DC DUP2 PUSH2 0x9D4 DUP2 SWAP15 DUP3 SWAP1 DUP16 DUP16 PUSH2 0x9CD SWAP2 DUP5 SWAP2 PUSH32 0x83607EB75A55050A03E80AE5461D2137EDB1B40B3AFE987401CB60E90039F7CE SWAP16 DUP16 DUP5 PUSH2 0x9A7 SWAP2 PUSH1 0x20 SWAP4 PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x9C6 DUP2 SLOAD PUSH2 0x2188 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP13 PUSH2 0x2197 JUMP JUMPDEST SWAP12 SWAP1 SWAP6 PUSH2 0x2197 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH2 0x2197 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 CALLER SWAP11 TIMESTAMP SWAP6 DUP9 PUSH2 0x21F9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP5 PUSH2 0x239F JUMP JUMPDEST PUSH2 0xA15 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH2 0x223C JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 POP DUP13 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0xA31 DUP4 SWAP5 MLOAD DUP8 PUSH2 0x2062 JUMP JUMPDEST ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x8 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP5 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0xA5E JUMPI POP POP PUSH2 0x7FF JUMP JUMPDEST DUP1 PUSH2 0xA6B PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP1 PUSH2 0xA78 JUMPI JUMPDEST POP ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0xA91 JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xAAD PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2004 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0xA8B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x426174636820746F6F206C61726765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81A185CDA195CC81D1BC818DBDB5B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xA8C2CEE640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA6D2F4CAE640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E74207479706573206C656E677468206D69736D61746368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A472053746F7261676520494473206C656E677468206D69736D617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH1 0x20 PUSH2 0xCB2 DUP2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD5B PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x22ED JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD7F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x2339 JUMP JUMPDEST PUSH2 0xD87 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH32 0xBE161F50DC26F188A4DBEBD94BE20156CB3C4827D2ED9E131A355FF32823677E PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE04 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE1D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE36 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE4F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xE5A PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0x1212 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D7 JUMPI DUP2 ISZERO PUSH2 0x1199 JUMPI PUSH1 0x40 MLOAD PUSH2 0xE89 DUP2 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH2 0xE99 CALLDATASIZE DUP7 DUP5 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xEBC CALLDATASIZE DUP5 DUP9 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP1 DUP2 MSTORE DUP9 PUSH2 0xF7E PUSH2 0xED2 CALLDATASIZE DUP14 DUP10 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD SWAP1 DUP2 MSTORE PUSH2 0xF74 PUSH2 0xEF1 DUP13 PUSH1 0xE0 DUP9 ADD SWAP6 PUSH1 0x84 CALLDATALOAD DUP8 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP5 PUSH2 0x100 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xF6A PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP9 DUP1 MLOAD DUP11 SSTORE PUSH2 0xF25 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP13 ADD PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x2 DUP11 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP12 ADD SSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP10 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP8 ADD PUSH2 0x2062 JUMP JUMPDEST MLOAD PUSH1 0x6 DUP6 ADD PUSH2 0x2062 JUMP JUMPDEST MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xAB6 JUMPI PUSH1 0x8 DUP3 ADD SLOAD DUP4 PUSH1 0x8 DUP5 ADD SSTORE DUP1 DUP5 LT PUSH2 0x1120 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x8 SWAP2 ADD SWAP2 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1103 JUMPI POP POP POP POP CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xFE0 PUSH1 0x4 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2166 JUMP JUMPDEST PUSH2 0xFEB PUSH1 0x4 CALLDATALOAD PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP7 DUP3 CALLDATACOPY DUP3 DUP2 ADD SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 CALLDATALOAD SWAP4 SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x10BD JUMPI POP PUSH2 0x10AA SWAP5 SWAP3 PUSH32 0x52AD1E0D7998F18FD8973F9BA5CB497388C6CDCB581980CFCE9D8589D3948D50 SWAP7 SWAP5 SWAP3 PUSH2 0x1095 PUSH32 0x83607EB75A55050A03E80AE5461D2137EDB1B40B3AFE987401CB60E90039F7CE SWAP4 DUP12 PUSH1 0x40 MLOAD DUP2 DUP7 DUP3 CALLDATACOPY PUSH1 0x20 DUP2 DUP4 DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x107F DUP2 SLOAD PUSH2 0x2188 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 CALLER SWAP10 PUSH1 0x4 CALLDATALOAD SWAP10 TIMESTAMP SWAP6 DUP9 PUSH2 0x21F9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x4 CALLDATALOAD SWAP6 TIMESTAMP SWAP2 DUP5 PUSH2 0x223C JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH2 0x10ED PUSH2 0x10CF PUSH2 0x10FE SWAP4 DUP12 DUP12 PUSH2 0x2197 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD SWAP3 DUP4 CALLDATACOPY DUP2 ADD SWAP1 PUSH1 0x6 DUP3 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 CALLDATALOAD SWAP4 SUB ADD SWAP1 KECCAK256 PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x90D PUSH2 0x908 PUSH2 0x901 DUP4 DUP13 DUP13 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0x1114 DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2062 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x8 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP5 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x1141 JUMPI POP POP PUSH2 0xFA7 JUMP JUMPDEST DUP1 PUSH2 0x114E PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP1 PUSH2 0x115B JUMPI JUMPDEST POP ADD PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0x1174 JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP16 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x1190 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2004 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC11C814DD1BDC9859D9481251081C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4861736820616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x92DCECC2D8D2C840D0C2E6D PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x125F PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x9 SLOAD PUSH2 0x12BC DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 PUSH2 0x12CA PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E87 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP4 ADD SWAP1 DUP2 PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1366 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x133A JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1356 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1C88 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x1 DUP7 DUP2 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x137F DUP2 PUSH2 0x4C5 DUP2 DUP10 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x12FF JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x13A9 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x232 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x13DA SWAP2 PUSH2 0x1D83 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x140B PUSH2 0x1EA8 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1456 JUMPI PUSH2 0x48F DUP6 PUSH2 0x144A DUP2 DUP10 SUB DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CDA JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1433 JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x14AC DUP4 PUSH2 0x14A5 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP5 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1554 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x1546 PUSH1 0x3 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x14EA DUP3 PUSH2 0x14E3 DUP2 PUSH1 0x5 DUP10 ADD PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP4 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x1508 DUP8 PUSH2 0x1501 DUP2 PUSH1 0x6 DUP6 ADD PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP9 PUSH2 0x1E87 JUMP JUMPDEST ADD SLOAD SWAP7 PUSH2 0x1527 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH2 0x100 DUP1 PUSH1 0x20 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x2A2 PUSH1 0x20 SWAP2 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x15F6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH2 0x1614 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x22ED JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x1637 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x2339 JUMP JUMPDEST PUSH2 0x163F PUSH2 0x22CA JUMP JUMPDEST DUP2 ISZERO PUSH2 0x17E0 JUMPI DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x4C5 PUSH2 0x1667 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 DUP2 MLOAD DUP1 PUSH2 0x17B7 JUMPI JUMPDEST POP POP POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP5 DUP3 GT PUSH2 0xAB6 JUMPI PUSH2 0x169E DUP3 PUSH2 0x1698 DUP8 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP8 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x0 SWAP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1733 JUMPI DUP3 PUSH32 0x26E195FB36A9E7F1104EB490680EECC0D1CFAB1970C26A47F527B076F2A14E69 SWAP6 SWAP7 PUSH1 0x0 SWAP2 PUSH2 0x1728 JUMPI JUMPDEST POP DUP4 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP6 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 DUP6 DUP3 CALLDATACOPY DUP3 DUP2 DUP6 DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH2 0x1719 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 TIMESTAMP SWAP1 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST SWAP1 POP DUP5 ADD CALLDATALOAD DUP8 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP6 DUP2 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x17A0 JUMPI POP DUP5 PUSH32 0x26E195FB36A9E7F1104EB490680EECC0D1CFAB1970C26A47F527B076F2A14E69 SWAP8 SWAP9 LT PUSH2 0x1786 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP4 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x16EC JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x1777 JUMP JUMPDEST SWAP1 SWAP2 DUP5 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP11 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP2 PUSH2 0x17CD DUP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 ADD PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE DUP6 DUP2 DUP2 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59080C11C814DD1BDC9859D9481251 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x232 JUMPI PUSH2 0x1843 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1871 JUMPI PUSH2 0x4C5 PUSH2 0x185D PUSH2 0x48F SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x18B8 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x22ED JUMP JUMPDEST PUSH2 0x18C0 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x191C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x884DBC6CEE9C8F554B4538D0257E260EE7330518C333079DD23AF96FE728C59D PUSH1 0x40 MLOAD SWAP3 TIMESTAMP DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x232 JUMPI PUSH2 0x2A2 PUSH1 0x20 SWAP2 PUSH2 0x1D15 JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x19B2 DUP3 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19F9 JUMPI PUSH2 0x48F DUP6 PUSH2 0x144A DUP2 DUP10 SUB DUP3 PUSH2 0x1E87 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x19E2 JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x100 DUP2 PUSH2 0x1A30 PUSH1 0x60 SWAP4 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x8 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1A82 DUP4 PUSH2 0x1E6B JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A9A DUP2 PUSH2 0x4C5 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE MLOAD PUSH2 0x1AE1 DUP2 PUSH2 0x4C5 DUP2 PUSH1 0x5 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1AFA DUP2 PUSH2 0x4C5 DUP2 PUSH1 0x6 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD DUP1 SLOAD PUSH2 0x1B15 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP2 PUSH2 0x1B23 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1E87 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C40 JUMPI DUP6 DUP6 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B71 PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x120 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x1BCF PUSH2 0x1BBB PUSH1 0xA0 DUP6 ADD MLOAD SWAP4 PUSH1 0x1F NOT SWAP5 DUP6 DUP9 DUP4 SUB ADD PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD DUP5 DUP8 DUP4 SUB ADD PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST SWAP3 PUSH1 0xE0 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD SWAP2 DUP2 DUP5 DUP3 SUB ADD PUSH2 0x120 DUP6 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x20 DUP1 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1C0F JUMPI DUP8 DUP8 SUB DUP9 RETURN JUMPDEST SWAP2 SWAP4 SWAP6 DUP2 SWAP4 SWAP6 SWAP8 POP PUSH1 0x20 PUSH2 0x1C2E DUP3 PUSH1 0x1 SWAP5 DUP7 DUP5 SWAP6 SUB ADD DUP9 MSTORE DUP11 MLOAD PUSH2 0x1C88 JUMP JUMPDEST SWAP9 ADD SWAP5 ADD SWAP5 ADD SWAP2 DUP8 SWAP7 SWAP6 SWAP4 SWAP5 SWAP2 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1C57 DUP2 PUSH2 0x4C5 DUP2 DUP10 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C78 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C68 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1CA1 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x232 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x232 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D01 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1DCB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1DB5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DAA JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x1DE6 DUP4 PUSH2 0x1D9B JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1E48 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E08 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x1E34 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E02 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAB6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAB6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x232 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x232 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x232 JUMPI JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xAB6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1F17 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x1E87 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x232 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x232 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1F4F SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1EEE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F66 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAB6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x1FA2 DUP5 PUSH2 0x1F7E JUMP JUMPDEST SWAP2 PUSH2 0x1FB0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1E87 JUMP JUMPDEST DUP3 SWAP5 DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x5 SHL DUP4 ADD SWAP3 DUP3 DUP5 GT PUSH2 0x232 JUMPI DUP1 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1FDA JUMPI POP POP POP POP POP POP JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI DUP7 SWAP2 PUSH2 0x1FF9 DUP7 DUP5 SWAP4 DUP7 ADD PUSH2 0x1F34 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x1FCB JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x200F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2004 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x202A JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2056 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2058 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2004 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAB6 JUMPI PUSH2 0x2089 DUP2 PUSH2 0x2083 DUP5 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP5 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x20C5 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x20BA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x2111 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x20F8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20EE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAB6 JUMPI PUSH2 0x214B DUP2 PUSH1 0x1 PUSH2 0x2162 SWAP4 ADD PUSH1 0x8 SSTORE PUSH2 0x1D15 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xAB6 JUMPI DUP2 PUSH2 0x214B SWAP2 PUSH1 0x1 PUSH2 0x2162 SWAP5 ADD DUP2 SSTORE PUSH2 0x1D83 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x21C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x232 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x232 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP2 SWAP3 PUSH2 0x2237 SWAP5 PUSH2 0x221B PUSH2 0x2229 SWAP4 PUSH1 0x60 SWAP9 SWAP7 PUSH1 0x80 DUP14 MSTORE PUSH1 0x80 DUP14 ADD SWAP2 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 DUP11 DUP4 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x21D8 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x21D8 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP4 SWAP3 SWAP2 DUP1 PUSH1 0x40 DUP7 ADD PUSH1 0x40 DUP8 MSTORE MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP2 DUP4 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2271 JUMPI POP POP POP POP PUSH1 0x20 SWAP2 POP SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x5F NOT DUP10 DUP3 SUB ADD DUP5 MSTORE DUP6 CALLDATALOAD PUSH1 0x1E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x232 JUMPI DUP3 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP1 SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x232 JUMPI DUP2 CALLDATASIZE SUB DUP2 SGT PUSH2 0x232 JUMPI PUSH1 0x1 SWAP4 DUP4 SWAP3 PUSH2 0x22BC SWAP3 PUSH2 0x21D8 JUMP JUMPDEST SWAP8 ADD SWAP7 SWAP6 SWAP5 ADD SWAP3 ADD SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x22DB JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22F4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D6F72792068617368206973206E6F742061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2340 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206F776E6572206F662074686973206D656D6F727920686173 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x232 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 ADD DUP3 PUSH1 0x5 SHL CALLDATASIZE SUB DUP2 SGT PUSH2 0x232 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x241D JUMPI POP PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 PUSH1 0x1 PUSH2 0x240D SWAP3 ADD PUSH1 0x9 SSTORE PUSH2 0x1D4C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1871 JUMPI PUSH2 0x2056 SWAP2 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0x2439 PUSH2 0x242C DUP4 PUSH2 0x1D4C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD KECCAK256 SWAP1 DUP5 MLOAD SWAP1 DUP6 ADD KECCAK256 EQ PUSH2 0x245B JUMPI PUSH2 0x2456 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x23E9 JUMP JUMPDEST POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xBE 0xC7 GASLIMIT SWAP4 PUSH5 0x31B480A9FB PUSH0 0xA6 0xB4 SLOAD 0xE9 0xD 0xAB CODECOPY PUSH30 0x75788CF01BFB9E4E71B3FE3E64736F6C6343000814003300000000000000 ","sourceMap":"373:12051:3:-:0;;;;;;;2383:10;1273:26:0;1269:95;;1297:1;373:12051:3;;2383:10;-1:-1:-1;;;;;;373:12051:3;;;;;;;;;2383:10;;-1:-1:-1;;;;;373:12051:3;;3052:40:0;;1297:1;3052:40;373:12051:3;1857:1:2;;373:12051:3;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;1297:1;1322:31;;;373:12051:3;;;1322:31:0;373:12051:3;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7848,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_string_calldata_dyn_calldata":{"entryPoint":7870,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_array_string_dyn":{"entryPoint":8085,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":7918,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":7988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":7341,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_array_bytes32_dyn":{"entryPoint":7386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_string_calldata_dyn_calldata_uint256":{"entryPoint":8764,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":7304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":8664,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_calldata_string_calldata_string_calldata_uint256":{"entryPoint":8697,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":7637,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":8062,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr":{"entryPoint":8550,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr_28895":{"entryPoint":8489,"id":null,"parameterSlots":1,"returnSlots":0},"calldata_array_index_access_bytes32_dyn_calldata":{"entryPoint":9103,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_string_calldata_dyn_calldata":{"entryPoint":8599,"id":null,"parameterSlots":3,"returnSlots":2},"calldata_array_index_access_string_calldata_dyn_calldata_dyn_calldata":{"entryPoint":9119,"id":null,"parameterSlots":3,"returnSlots":2},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":8219,"id":null,"parameterSlots":3,"returnSlots":0},"clear_storage_range_bytes1":{"entryPoint":8196,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":8290,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7269,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7579,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7815,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_28880":{"entryPoint":7787,"id":null,"parameterSlots":1,"returnSlots":0},"fun_addTagIfNew":{"entryPoint":9187,"id":1179,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":8018,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":8906,"id":226,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":8584,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_99e1":{"entryPoint":9017,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f83e":{"entryPoint":8941,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":7555,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_bytes32_dyn_28883":{"entryPoint":7445,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_bytes32_dyn_28884":{"entryPoint":7500,"id":null,"parameterSlots":1,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x77F9E19 EQ PUSH2 0x1A10 JUMPI POP DUP1 PUSH4 0x14205822 EQ PUSH2 0x1980 JUMPI DUP1 PUSH4 0x19ABF3C7 EQ PUSH2 0x1957 JUMPI DUP1 PUSH4 0x233E42AE EQ PUSH2 0x1887 JUMPI DUP1 PUSH4 0x30BABDD4 EQ PUSH2 0x181C JUMPI DUP1 PUSH4 0x374146E2 EQ PUSH2 0xCF9 JUMPI DUP1 PUSH4 0x3EA60080 EQ PUSH2 0x15C2 JUMPI DUP1 PUSH4 0x440BC494 EQ PUSH2 0x155E JUMPI DUP1 PUSH4 0x4B31F22C EQ PUSH2 0x146D JUMPI DUP1 PUSH4 0x552338B3 EQ PUSH2 0x13E9 JUMPI DUP1 PUSH4 0x5730E4C8 EQ PUSH2 0x1390 JUMPI DUP1 PUSH4 0x7038F157 EQ PUSH2 0x129F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1246 JUMPI DUP1 PUSH4 0x732AC8CC EQ PUSH2 0xDD3 JUMPI DUP1 PUSH4 0x7AFB8065 EQ PUSH2 0xD2A JUMPI DUP1 PUSH4 0x82482D41 EQ PUSH2 0xCF9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCD0 JUMPI DUP1 PUSH4 0x91FF9A1C EQ PUSH2 0xC7F JUMPI DUP1 PUSH4 0xA6CE4FC5 EQ PUSH2 0x537 JUMPI DUP1 PUSH4 0xAAECBB35 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xD121BF0F EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xEFBC4E96 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF7E38666 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xF82E3DDA EQ PUSH2 0x237 JUMPI PUSH4 0xFD098E1E EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP3 SWAP1 DUP2 DUP1 JUMPDEST DUP5 DUP2 LT PUSH2 0x184 JUMPI POP PUSH1 0xA0 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x18D DUP2 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 SWAP1 PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE PUSH1 0xFF SWAP3 DUP4 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x1EC JUMPI JUMPDEST POP SWAP1 PUSH1 0x4 SWAP2 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1D7 JUMPI JUMPDEST PUSH2 0x1D2 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST SWAP1 PUSH2 0x1E4 PUSH2 0x1D2 SWAP2 PUSH2 0x2188 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1C9 JUMP JUMPDEST SWAP9 PUSH2 0x1FA SWAP1 SWAP8 SWAP3 SWAP2 SWAP8 PUSH2 0x2188 JUMP JUMPDEST SWAP9 DUP8 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21C JUMPI SWAP1 SWAP6 PUSH1 0x4 PUSH2 0x1B4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x267 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F34 JUMP JUMPDEST PUSH2 0x283 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x232 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x2A2 SWAP2 PUSH2 0x1D83 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x2F9 PUSH1 0x20 PUSH2 0x2E6 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F34 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x325 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x32D PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x3E9 PUSH1 0x20 PUSH2 0x2E6 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1F34 JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x42D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP4 DUP3 CALLDATACOPY DUP4 DUP2 DUP4 DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD SWAP2 PUSH2 0x44C DUP4 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 PUSH2 0x45A PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1E87 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x469 PUSH1 0x1F NOT SWAP2 PUSH2 0x1F7E JUMP JUMPDEST ADD CALLDATASIZE DUP6 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x8 SLOAD SWAP4 JUMPDEST DUP5 DUP2 LT PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x48F DUP9 DUP3 PUSH2 0x1CDA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH2 0x49C DUP2 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP9 MSTORE PUSH2 0x4C5 PUSH2 0x4CC PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP3 PUSH2 0x1E87 JUMP JUMPDEST DUP9 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x4DD CALLDATASIZE DUP6 DUP8 PUSH2 0x1EEE JUMP JUMPDEST DUP10 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x4F8 JUMPI JUMPDEST POP PUSH2 0x4F3 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST DUP7 SWAP5 SWAP2 SWAP5 MLOAD DUP3 LT ISZERO PUSH2 0x521 JUMPI DUP2 PUSH2 0x51A SWAP2 DUP10 PUSH2 0x4F3 SWAP5 PUSH1 0x5 SHL DUP11 ADD ADD MSTORE PUSH2 0x2188 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x4E9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x568 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x581 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x59C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x64 SWAP7 SWAP2 SWAP7 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x5B7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x84 SWAP8 SWAP2 SWAP8 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x5D2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP9 SWAP1 SWAP7 PUSH1 0xA4 CALLDATALOAD GT PUSH2 0x232 JUMPI PUSH2 0x5EC CALLDATASIZE PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP11 SWAP1 SWAP8 DUP10 DUP8 SUB PUSH2 0xC41 JUMPI DUP6 DUP8 SUB PUSH2 0xBFC JUMPI DUP4 DUP8 SUB PUSH2 0xBB7 JUMPI DUP11 DUP8 SUB PUSH2 0xB7A JUMPI DUP12 DUP8 SUB PUSH2 0xB3E JUMPI DUP7 ISZERO PUSH2 0xB03 JUMPI PUSH1 0x32 DUP8 GT PUSH2 0xACC JUMPI PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x62C JUMPI STOP JUMPDEST PUSH2 0x637 DUP2 DUP10 DUP12 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP13 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x65C JUMPI JUMPDEST POP PUSH2 0x657 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST SWAP12 DUP8 DUP5 DUP14 SWAP15 DUP5 SWAP15 SWAP6 SWAP5 DUP15 DUP10 DUP16 DUP16 DUP5 DUP16 DUP16 SWAP4 PUSH2 0x67A DUP4 DUP1 SWAP6 DUP2 SWAP4 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP14 PUSH2 0x685 SWAP3 PUSH2 0x2197 JUMP JUMPDEST SWAP10 PUSH2 0x691 SWAP3 SWAP2 SWAP10 PUSH2 0x2197 JUMP JUMPDEST SWAP3 PUSH2 0x69D SWAP3 SWAP2 SWAP5 PUSH2 0x2197 JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH2 0x6AB DUP2 DUP12 DUP14 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP7 PUSH2 0x6B6 SWAP3 PUSH2 0x239F JUMP JUMPDEST SWAP7 SWAP1 SWAP8 PUSH1 0x40 MLOAD SWAP12 PUSH2 0x6C6 DUP14 PUSH2 0x1E6B JUMP JUMPDEST DUP13 MSTORE CALLDATASIZE SWAP1 PUSH2 0x6D3 SWAP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x20 DUP12 ADD MSTORE CALLER PUSH1 0x40 DUP12 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD PUSH1 0x1 SWAP1 MSTORE CALLDATASIZE SWAP1 PUSH2 0x6F7 SWAP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x707 SWAP3 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE CALLDATASIZE SWAP1 PUSH2 0x71C SWAP3 PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x72D DUP13 DUP11 DUP13 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SWAP1 PUSH2 0x753 SWAP2 PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP6 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x7B4 SWAP1 PUSH1 0x5 DUP7 ADD PUSH2 0x2062 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x7C6 SWAP1 PUSH1 0x6 DUP7 ADD PUSH2 0x2062 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 GT PUSH2 0xAB6 JUMPI DUP16 SWAP4 DUP13 DUP16 SWAP3 DUP16 SWAP8 DUP15 SWAP4 PUSH1 0x8 DUP3 ADD SLOAD DUP4 PUSH1 0x8 DUP5 ADD SSTORE DUP1 DUP5 LT PUSH2 0xA3D JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x8 SWAP2 ADD SWAP2 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xA20 JUMPI POP POP POP POP DUP3 PUSH1 0x20 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH2 0x875 SWAP3 PUSH2 0x86C SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x3 DUP7 MSTORE PUSH2 0x853 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x84C DUP6 DUP6 DUP6 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x867 PUSH2 0x861 DUP5 DUP5 DUP5 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD PUSH2 0x2129 JUMP JUMPDEST PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP3 DUP12 DUP9 PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE DUP11 PUSH2 0x899 DUP14 DUP6 PUSH1 0x0 SWAP4 PUSH2 0x239F JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x91B JUMPI SWAP1 PUSH2 0x899 DUP14 DUP6 PUSH2 0x912 DUP16 SWAP8 SWAP7 SWAP6 DUP16 DUP16 PUSH2 0x901 DUP4 PUSH2 0x8DB DUP9 DUP9 DUP16 PUSH2 0x8FC PUSH2 0x90D SWAP9 PUSH2 0x84C DUP6 PUSH2 0x908 SWAP11 PUSH1 0x20 PUSH2 0x8E1 DUP12 PUSH2 0x8DB DUP6 DUP12 DUP12 PUSH2 0x239F JUMP JUMPDEST SWAP1 PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH2 0x238F JUMP JUMPDEST PUSH2 0x239F JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x23E3 JUMP JUMPDEST PUSH2 0x2188 JUMP JUMPDEST SWAP4 SWAP5 SWAP6 SWAP7 PUSH2 0x239F JUMP JUMPDEST POP SWAP2 SWAP11 DUP11 PUSH32 0x52AD1E0D7998F18FD8973F9BA5CB497388C6CDCB581980CFCE9D8589D3948D50 PUSH2 0xA04 PUSH2 0x657 SWAP5 SWAP16 SWAP15 DUP16 SWAP1 PUSH2 0x9FD DUP16 DUP16 DUP16 SWAP2 DUP16 SWAP3 DUP16 SWAP4 DUP16 DUP16 SWAP6 DUP2 PUSH2 0x9F5 DUP16 SWAP12 SWAP9 PUSH2 0x9E4 DUP14 PUSH2 0x9DC DUP2 PUSH2 0x9D4 DUP2 SWAP15 DUP3 SWAP1 DUP16 DUP16 PUSH2 0x9CD SWAP2 DUP5 SWAP2 PUSH32 0x83607EB75A55050A03E80AE5461D2137EDB1B40B3AFE987401CB60E90039F7CE SWAP16 DUP16 DUP5 PUSH2 0x9A7 SWAP2 PUSH1 0x20 SWAP4 PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x9C6 DUP2 SLOAD PUSH2 0x2188 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP13 PUSH2 0x2197 JUMP JUMPDEST SWAP12 SWAP1 SWAP6 PUSH2 0x2197 JUMP JUMPDEST SWAP7 SWAP1 SWAP6 PUSH2 0x2197 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 CALLER SWAP11 TIMESTAMP SWAP6 DUP9 PUSH2 0x21F9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x238F JUMP JUMPDEST CALLDATALOAD SWAP5 PUSH2 0x239F JUMP JUMPDEST PUSH2 0xA15 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH2 0x223C JUMP JUMPDEST SUB SWAP1 LOG2 SWAP1 POP DUP13 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0xA31 DUP4 SWAP5 MLOAD DUP8 PUSH2 0x2062 JUMP JUMPDEST ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x815 JUMP JUMPDEST PUSH1 0x8 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP5 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0xA5E JUMPI POP POP PUSH2 0x7FF JUMP JUMPDEST DUP1 PUSH2 0xA6B PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP1 PUSH2 0xA78 JUMPI JUMPDEST POP ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0xA91 JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xAAD PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2004 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0xA8B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x426174636820746F6F206C61726765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81A185CDA195CC81D1BC818DBDB5B5A5D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0xA8C2CEE640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xA6D2F4CAE640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E74207479706573206C656E677468206D69736D61746368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A472053746F7261676520494473206C656E677468206D69736D617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH1 0x20 PUSH2 0xCB2 DUP2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD5B PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x22ED JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD7F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x2339 JUMP JUMPDEST PUSH2 0xD87 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH32 0xBE161F50DC26F188A4DBEBD94BE20156CB3C4827D2ED9E131A355FF32823677E PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE04 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE1D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE36 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0xE4F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xE5A PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0x1212 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x11D7 JUMPI DUP2 ISZERO PUSH2 0x1199 JUMPI PUSH1 0x40 MLOAD PUSH2 0xE89 DUP2 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH2 0xE99 CALLDATASIZE DUP7 DUP5 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0xEBC CALLDATASIZE DUP5 DUP9 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD SWAP1 DUP2 MSTORE DUP9 PUSH2 0xF7E PUSH2 0xED2 CALLDATASIZE DUP14 DUP10 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD SWAP1 DUP2 MSTORE PUSH2 0xF74 PUSH2 0xEF1 DUP13 PUSH1 0xE0 DUP9 ADD SWAP6 PUSH1 0x84 CALLDATALOAD DUP8 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP5 PUSH2 0x100 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xF6A PUSH1 0x80 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP9 DUP1 MLOAD DUP11 SSTORE PUSH2 0xF25 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP13 ADD PUSH2 0x2062 JUMP JUMPDEST PUSH1 0x2 DUP11 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP12 ADD SSTORE ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP10 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x5 DUP8 ADD PUSH2 0x2062 JUMP JUMPDEST MLOAD PUSH1 0x6 DUP6 ADD PUSH2 0x2062 JUMP JUMPDEST MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0xAB6 JUMPI PUSH1 0x8 DUP3 ADD SLOAD DUP4 PUSH1 0x8 DUP5 ADD SSTORE DUP1 DUP5 LT PUSH2 0x1120 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x8 SWAP2 ADD SWAP2 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1103 JUMPI POP POP POP POP CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xFE0 PUSH1 0x4 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2166 JUMP JUMPDEST PUSH2 0xFEB PUSH1 0x4 CALLDATALOAD PUSH2 0x2129 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP7 DUP3 CALLDATACOPY DUP3 DUP2 ADD SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 CALLDATALOAD SWAP4 SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x0 JUMPDEST DUP8 DUP2 LT PUSH2 0x10BD JUMPI POP PUSH2 0x10AA SWAP5 SWAP3 PUSH32 0x52AD1E0D7998F18FD8973F9BA5CB497388C6CDCB581980CFCE9D8589D3948D50 SWAP7 SWAP5 SWAP3 PUSH2 0x1095 PUSH32 0x83607EB75A55050A03E80AE5461D2137EDB1B40B3AFE987401CB60E90039F7CE SWAP4 DUP12 PUSH1 0x40 MLOAD DUP2 DUP7 DUP3 CALLDATACOPY PUSH1 0x20 DUP2 DUP4 DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x107F DUP2 SLOAD PUSH2 0x2188 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 CALLER SWAP10 PUSH1 0x4 CALLDATALOAD SWAP10 TIMESTAMP SWAP6 DUP9 PUSH2 0x21F9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x4 CALLDATALOAD SWAP6 TIMESTAMP SWAP2 DUP5 PUSH2 0x223C JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH2 0x10ED PUSH2 0x10CF PUSH2 0x10FE SWAP4 DUP12 DUP12 PUSH2 0x2197 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD SWAP3 DUP4 CALLDATACOPY DUP2 ADD SWAP1 PUSH1 0x6 DUP3 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 CALLDATALOAD SWAP4 SUB ADD SWAP1 KECCAK256 PUSH2 0x2166 JUMP JUMPDEST PUSH2 0x90D PUSH2 0x908 PUSH2 0x901 DUP4 DUP13 DUP13 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0x1114 DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2062 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x8 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP5 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x1141 JUMPI POP POP PUSH2 0xFA7 JUMP JUMPDEST DUP1 PUSH2 0x114E PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP1 PUSH2 0x115B JUMPI JUMPDEST POP ADD PUSH2 0x1131 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0x1174 JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP16 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x1190 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2004 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xC11C814DD1BDC9859D9481251081C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4861736820616C726561647920657869737473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x92DCECC2D8D2C840D0C2E6D PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x125F PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x9 SLOAD PUSH2 0x12BC DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP1 PUSH2 0x12CA PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E87 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 DUP4 ADD SWAP1 DUP2 PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1366 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x133A JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1356 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1C88 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x1 DUP7 DUP2 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x137F DUP2 PUSH2 0x4C5 DUP2 DUP10 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x12FF JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x13A9 PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x232 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x13DA SWAP2 PUSH2 0x1D83 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x140B PUSH2 0x1EA8 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1456 JUMPI PUSH2 0x48F DUP6 PUSH2 0x144A DUP2 DUP10 SUB DUP3 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1CDA JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1433 JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0x14AC DUP4 PUSH2 0x14A5 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP5 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x1554 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x1546 PUSH1 0x3 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x14EA DUP3 PUSH2 0x14E3 DUP2 PUSH1 0x5 DUP10 ADD PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP4 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x1508 DUP8 PUSH2 0x1501 DUP2 PUSH1 0x6 DUP6 ADD PUSH2 0x1DD5 JUMP JUMPDEST SUB DUP9 PUSH2 0x1E87 JUMP JUMPDEST ADD SLOAD SWAP7 PUSH2 0x1527 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH2 0x100 DUP1 PUSH1 0x20 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x2A2 PUSH1 0x20 SWAP2 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x15F6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x2 DUP2 MSTORE PUSH2 0x1614 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x22ED JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x1637 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x2339 JUMP JUMPDEST PUSH2 0x163F PUSH2 0x22CA JUMP JUMPDEST DUP2 ISZERO PUSH2 0x17E0 JUMPI DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x4C5 PUSH2 0x1667 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 DUP2 MLOAD DUP1 PUSH2 0x17B7 JUMPI JUMPDEST POP POP POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP5 DUP3 GT PUSH2 0xAB6 JUMPI PUSH2 0x169E DUP3 PUSH2 0x1698 DUP8 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP8 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x0 SWAP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1733 JUMPI DUP3 PUSH32 0x26E195FB36A9E7F1104EB490680EECC0D1CFAB1970C26A47F527B076F2A14E69 SWAP6 SWAP7 PUSH1 0x0 SWAP2 PUSH2 0x1728 JUMPI JUMPDEST POP DUP4 PUSH1 0x1 SHL SWAP1 PUSH1 0x0 NOT DUP6 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 DUP6 DUP3 CALLDATACOPY DUP3 DUP2 DUP6 DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH2 0x1719 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP2 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 TIMESTAMP SWAP1 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST SWAP1 POP DUP5 ADD CALLDATALOAD DUP8 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP6 DUP2 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x17A0 JUMPI POP DUP5 PUSH32 0x26E195FB36A9E7F1104EB490680EECC0D1CFAB1970C26A47F527B076F2A14E69 SWAP8 SWAP9 LT PUSH2 0x1786 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP4 DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x16EC JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 PUSH2 0x1777 JUMP JUMPDEST SWAP1 SWAP2 DUP5 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP11 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1745 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP2 PUSH2 0x17CD DUP5 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 ADD PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD PUSH1 0x5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE DUP6 DUP2 DUP2 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59080C11C814DD1BDC9859D9481251 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x232 JUMPI PUSH2 0x1843 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x1871 JUMPI PUSH2 0x4C5 PUSH2 0x185D PUSH2 0x48F SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH2 0x18B8 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0x22ED JUMP JUMPDEST PUSH2 0x18C0 PUSH2 0x22CA JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x191C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x884DBC6CEE9C8F554B4538D0257E260EE7330518C333079DD23AF96FE728C59D PUSH1 0x40 MLOAD SWAP3 TIMESTAMP DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x12185CDA08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x232 JUMPI PUSH2 0x2A2 PUSH1 0x20 SWAP2 PUSH2 0x1D15 JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x232 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI PUSH2 0x19B2 DUP3 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1CAD JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP2 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x19F9 JUMPI PUSH2 0x48F DUP6 PUSH2 0x144A DUP2 DUP10 SUB DUP3 PUSH2 0x1E87 JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x19E2 JUMP JUMPDEST CALLVALUE PUSH2 0x232 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x232 JUMPI PUSH2 0x100 DUP2 PUSH2 0x1A30 PUSH1 0x60 SWAP4 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x8 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1A82 DUP4 PUSH2 0x1E6B JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1A9A DUP2 PUSH2 0x4C5 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE MLOAD PUSH2 0x1AE1 DUP2 PUSH2 0x4C5 DUP2 PUSH1 0x5 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1AFA DUP2 PUSH2 0x4C5 DUP2 PUSH1 0x6 DUP7 ADD PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD DUP1 SLOAD PUSH2 0x1B15 DUP2 PUSH2 0x1F7E JUMP JUMPDEST SWAP2 PUSH2 0x1B23 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1E87 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C40 JUMPI DUP6 DUP6 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B71 PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x120 PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x1BCF PUSH2 0x1BBB PUSH1 0xA0 DUP6 ADD MLOAD SWAP4 PUSH1 0x1F NOT SWAP5 DUP6 DUP9 DUP4 SUB ADD PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD DUP5 DUP8 DUP4 SUB ADD PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x1C88 JUMP JUMPDEST SWAP3 PUSH1 0xE0 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD SWAP2 DUP2 DUP5 DUP3 SUB ADD PUSH2 0x120 DUP6 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x20 DUP1 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x1C0F JUMPI DUP8 DUP8 SUB DUP9 RETURN JUMPDEST SWAP2 SWAP4 SWAP6 DUP2 SWAP4 SWAP6 SWAP8 POP PUSH1 0x20 PUSH2 0x1C2E DUP3 PUSH1 0x1 SWAP5 DUP7 DUP5 SWAP6 SUB ADD DUP9 MSTORE DUP11 MLOAD PUSH2 0x1C88 JUMP JUMPDEST SWAP9 ADD SWAP5 ADD SWAP5 ADD SWAP2 DUP8 SWAP7 SWAP6 SWAP4 SWAP5 SWAP2 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH1 0x40 MLOAD PUSH2 0x1C57 DUP2 PUSH2 0x4C5 DUP2 DUP10 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x1B37 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C78 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C68 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1CA1 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x232 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x232 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D01 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1DCB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1DB5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1DAA JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x1DE6 DUP4 PUSH2 0x1D9B JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1E48 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1E08 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x1E34 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E02 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAB6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xAB6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x232 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x232 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x232 JUMPI JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xAB6 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1F17 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x1E87 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x232 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x232 JUMPI DUP2 PUSH1 0x20 PUSH2 0x1F4F SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x1EEE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F66 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAB6 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x1FA2 DUP5 PUSH2 0x1F7E JUMP JUMPDEST SWAP2 PUSH2 0x1FB0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1E87 JUMP JUMPDEST DUP3 SWAP5 DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD SWAP1 PUSH1 0x5 SHL DUP4 ADD SWAP3 DUP3 DUP5 GT PUSH2 0x232 JUMPI DUP1 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1FDA JUMPI POP POP POP POP POP POP JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x232 JUMPI DUP7 SWAP2 PUSH2 0x1FF9 DUP7 DUP5 SWAP4 DUP7 ADD PUSH2 0x1F34 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x1FCB JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x200F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2004 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x202A JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2056 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2058 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2004 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xAB6 JUMPI PUSH2 0x2089 DUP2 PUSH2 0x2083 DUP5 SLOAD PUSH2 0x1D9B JUMP JUMPDEST DUP5 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x20C5 JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x20BA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x2111 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x20F8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20EE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAB6 JUMPI PUSH2 0x214B DUP2 PUSH1 0x1 PUSH2 0x2162 SWAP4 ADD PUSH1 0x8 SSTORE PUSH2 0x1D15 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xAB6 JUMPI DUP2 PUSH2 0x214B SWAP2 PUSH1 0x1 PUSH2 0x2162 SWAP5 ADD DUP2 SSTORE PUSH2 0x1D83 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x21C JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x232 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x232 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP8 SWAP7 SWAP6 SWAP2 SWAP3 PUSH2 0x2237 SWAP5 PUSH2 0x221B PUSH2 0x2229 SWAP4 PUSH1 0x60 SWAP9 SWAP7 PUSH1 0x80 DUP14 MSTORE PUSH1 0x80 DUP14 ADD SWAP2 PUSH2 0x21D8 JUMP JUMPDEST SWAP2 DUP11 DUP4 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x21D8 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x21D8 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST SWAP4 SWAP3 SWAP2 DUP1 PUSH1 0x40 DUP7 ADD PUSH1 0x40 DUP8 MSTORE MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP2 DUP4 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2271 JUMPI POP POP POP POP PUSH1 0x20 SWAP2 POP SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x5F NOT DUP10 DUP3 SUB ADD DUP5 MSTORE DUP6 CALLDATALOAD PUSH1 0x1E NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x232 JUMPI DUP3 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP1 SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x232 JUMPI DUP2 CALLDATASIZE SUB DUP2 SGT PUSH2 0x232 JUMPI PUSH1 0x1 SWAP4 DUP4 SWAP3 PUSH2 0x22BC SWAP3 PUSH2 0x21D8 JUMP JUMPDEST SWAP8 ADD SWAP7 SWAP6 SWAP5 ADD SWAP3 ADD SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x22DB JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22F4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D656D6F72792068617368206973206E6F742061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2340 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206F776E6572206F662074686973206D656D6F727920686173 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0xFB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x521 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x232 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x232 JUMPI PUSH1 0x20 ADD DUP3 PUSH1 0x5 SHL CALLDATASIZE SUB DUP2 SGT PUSH2 0x232 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x241D JUMPI POP PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 PUSH1 0x1 PUSH2 0x240D SWAP3 ADD PUSH1 0x9 SSTORE PUSH2 0x1D4C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1871 JUMPI PUSH2 0x2056 SWAP2 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0x2439 PUSH2 0x242C DUP4 PUSH2 0x1D4C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1DD5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 SWAP3 ADD KECCAK256 SWAP1 DUP5 MLOAD SWAP1 DUP6 ADD KECCAK256 EQ PUSH2 0x245B JUMPI PUSH2 0x2456 SWAP1 PUSH2 0x2188 JUMP JUMPDEST PUSH2 0x23E9 JUMP JUMPDEST POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xBE 0xC7 GASLIMIT SWAP4 PUSH5 0x31B480A9FB PUSH0 0xA6 0xB4 SLOAD 0xE9 0xD 0xAB CODECOPY PUSH30 0x75788CF01BFB9E4E71B3FE3E64736F6C6343000814003300000000000000 ","sourceMap":"373:12051:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;10552:15;373:12051;10596:7;373:12051;;;;;;;;10739:26;;;;;;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;10767:3;10801:18;;;:::i;:::-;373:12051;;;;;;;;;10837:12;373:12051;;;;;;;;;;;;;10837:27;373:12051;;10833:131;;10767:3;373:12051;;;;;;;;;;;;10977:74;;10767:3;;;;:::i;:::-;10724:13;;10977:74;11021:15;;10767:3;11021:15;;:::i;:::-;10977:74;;;;;10833:131;10884:13;;;;;;;;:::i;:::-;373:12051;;;;;;10926:23;373:12051;;;10926:23;373:12051;;;;;;;;10915:34;;373:12051;10833:131;;373:12051;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1084:47;373:12051;;;;;;;;1084:47;;;;;373:12051;1084:47;;;;:::i;:::-;373:12051;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;999:49;373:12051;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;373:12051:3;;;;2627:22:0;;2623:91;;373:12051:3;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;3052:40:0;373:12051:3;3052:40:0;;373:12051:3;2623:91:0;373:12051:3;;-1:-1:-1;;;2672:31:0;;373:12051:3;;2672:31:0;;373:12051:3;;;2672:31:0;373:12051:3;;;;;;-1:-1:-1;;373:12051:3;;;;;7207:15;373:12051;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;:::i;:::-;;;1162:50;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6487:16;373:12051;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6574:13;373:12051;;6593:15;373:12051;6569:301;6589:26;;;;;;373:12051;;;;;;;:::i;:::-;;;;6617:3;6651:18;;;:::i;:::-;373:12051;;;;;;;;;6703:12;373:12051;;;;6703:30;373:12051;;;6703:30;373:12051;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;6687:48;373:12051;;;;;:::i;:::-;;;;;;6739:29;6687:81;6683:177;;6617:3;;;;;:::i;:::-;6574:13;;6683:177;373:12051;;;;;;;;;;;6832:13;373:12051;;6617:3;373:12051;;;;;;;6832:13;:::i;:::-;6683:177;;;;373:12051;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;8275:33;;;;;;373:12051;;8353:36;;;373:12051;;8442:36;;;373:12051;;8530:29;;;373:12051;;8603:31;;;373:12051;;8677:17;;373:12051;;8753:2;8736:19;;373:12051;;;8826:17;;;;;;373:12051;8845:3;8881:9;;;;;:::i;:::-;373:12051;;;8868:12;373:12051;;;;;;;8868:42;8864:1318;;8845:3;;;;;:::i;:::-;8811:13;;8864:1318;8999:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;373:12051;9040:12;;;;:::i;:::-;9210:15;;;;;;:::i;:::-;9260;;;;;;:::i;:::-;9303:8;;;;;;;;:::i;:::-;373:12051;9339:10;;;;:::i;:::-;373:12051;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;8960:408;;373:12051;9081:10;373:12051;8960:408;;373:12051;9124:15;373:12051;8960:408;;373:12051;;8960:408;;373:12051;;;;;;;;:::i;:::-;;8960:408;;373:12051;;;;;;:::i;:::-;;8960:408;;373:12051;;8960:408;;373:12051;;;;;;:::i;:::-;8960:408;;;373:12051;9400:9;;;;;:::i;:::-;373:12051;;;8868:12;373:12051;;;;;;;;;;;8960:408;;373:12051;;;;;;;;:::i;:::-;8868:12;373:12051;;;;;;;;;8960:408;;373:12051;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;8960:408;;373:12051;;;;;;8960:408;;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;;8960:408;;373:12051;;;;;;;:::i;:::-;;8960:408;;373:12051;;;;;;;:::i;:::-;;8960:408;;373:12051;;;;;8960:408;;373:12051;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;8864:1318;373:12051;;;;;;;;;;;;;;;;;;;;;9081:10;;;;;373:12051;9081:10;;;;;;9607:15;9081:10;9626:9;9081:10;;373:12051;;;;;9440:41;373:12051;;;9471:9;;;;;:::i;:::-;373:12051;9440:41;;:::i;:::-;9499:31;9520:9;;;;;:::i;:::-;373:12051;9499:31;:::i;:::-;9626:9;:::i;:::-;373:12051;9607:15;;;;:::i;:::-;373:12051;;;;;;;;;;;;;;;;;;;;9692:13;9711:10;9692:13;;373:12051;9687:180;9711:10;:::i;:::-;9707:21;;;;;;;9769:10;9711;9769;;9730:3;9769:10;;;;;;9834:13;9769:10;9834;9769;;;9757:42;9821:27;9769:10;9789:9;9769:10;373:12051;9769:10;373:12051;9769:13;:10;;;;;;:::i;:::-;:13;;:::i;:::-;373:12051;;;;;;;;;;;;;;;;;;;9789:9;;:::i;9757:42::-;9834:10;:::i;:13::-;373:12051;;;:::i;:::-;9821:27;:::i;:::-;9730:3;:::i;:::-;9692:13;;;;9711:10;:::i;9707:21::-;;;;;10115:52;10139:10;8845:3;9707:21;;;;;10128:9;9707:21;;;;;;;;;;;;9985:107;9707:21;;;10059:15;9707:21;10042:15;9707:21;10028:12;9707:21;;;;;;10005:9;9707:21;;;9985:107;9707:21;;;9943:15;9707:21;373:12051;9707:21;9943:15;:::i;:::-;373:12051;;;;;;;;;;;;;;;;;;;9926:35;373:12051;;9926:35;:::i;:::-;373:12051;;10005:9;:::i;:::-;373:12051;10028:12;;:::i;:::-;10042:15;;;;:::i;:::-;10059;;;;:::i;:::-;373:12051;;;9081:10;;;;9124:15;;9985:107;;;:::i;:::-;;;;10128:9;:::i;:::-;373:12051;10139:10;;:::i;:::-;10115:52;373:12051;;9124:15;;;;10115:52;;;:::i;:::-;;;;8864:1318;;;;;373:12051;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5938:15;373:12051;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;;;;2091:12;373:12051;;2083:65;373:12051;;;;;2091:27;373:12051;;2083:65;:::i;:::-;373:12051;;;2091:12;373:12051;;2219:118;373:12051;;;;;2091:12;373:12051;;;2240:24;373:12051;;2268:10;2240:38;2219:118;:::i;:::-;2466:103:2;;:::i;:::-;373:12051:3;;;2091:12;373:12051;;;;;;4902:27;373:12051;;;;;;;;;4989:15;;373:12051;;4953:52;373:12051;2268:10;4953:52;;373:12051;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2466:103:2;;;;;:::i;:::-;373:12051:3;;3085:18;373:12051;;;;;;3138:12;373:12051;;;;;;;;3217:29;;373:12051;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;3314:301;;373:12051;3402:10;373:12051;3314:301;;373:12051;3437:15;373:12051;3314:301;;373:12051;;;3314:301;;373:12051;;;;;;:::i;:::-;;3314:301;;373:12051;;;;;;;;;;:::i;:::-;;3314:301;;373:12051;;;;;3314:301;373:12051;3314:301;;373:12051;;;;;;;;:::i;:::-;3314:301;;;;373:12051;;;;;;;3138:12;373:12051;;;;;;;;;;;;;;3314:301;;373:12051;;;;;:::i;:::-;3138:12;373:12051;;;;;;;;3314:301;;373:12051;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;3314:301;;373:12051;;;;;3314:301;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3402:10;;;;;373:12051;;;;;3666:36;373:12051;;;;;3666:36;:::i;:::-;3712:26;373:12051;;3712:26;:::i;:::-;373:12051;;;;;;;;;;;;;;;;;;;;;;;;3874:15;;;;;;373:12051;4182:41;373:12051;;4182:41;373:12051;;;4077:90;;373:12051;;;;;;;;;;;;;;;;;;;;4030:31;373:12051;;4030:31;:::i;:::-;373:12051;;;;3402:10;;;;373:12051;;;3437:15;;4077:90;;;:::i;:::-;;;;373:12051;;;;;;;3437:15;;4182:41;;;:::i;:::-;;;;373:12051;;;;;;;;;;;3891:3;3922:7;3910:31;3922:7;3891:3;3922:7;;;;:::i;:::-;373:12051;;;;;;;;;;;;;;;;;;;;;3910:31;:::i;:::-;3955:21;373:12051;3968:7;;;;;:::i;3891:3::-;3859:13;;373:12051;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;1500:62:0;;:::i;:::-;373:12051:3;;;-1:-1:-1;;;;;;373:12051:3;;;;-1:-1:-1;;;;;373:12051:3;3052:40:0;373:12051:3;;3052:40:0;373:12051:3;;;;;;;-1:-1:-1;;373:12051:3;;;;7044:7;373:12051;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;7044:7;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;:::i;:::-;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;;;891:50;;;;;373:12051;891:50;;;;:::i;:::-;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;;;835:50;373:12051;;;;;;;;;835:50;373:12051;835:50;373:12051;835:50;373:12051;835:50;;373:12051;:::i;:::-;;;;:::i;:::-;;;;;;;835:50;;;373:12051;;835:50;373:12051;;835:50;;373:12051;835:50;373:12051;;835:50;;373:12051;;;;835:50;373:12051;835:50;373:12051;835:50;;;;373:12051;:::i;:::-;;;;:::i;:::-;835:50;373:12051;;835:50;373:12051;835:50;373:12051;835:50;;;;373:12051;:::i;:::-;;;;:::i;:::-;835:50;373:12051;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;7473:15;373:12051;7465:30;;373:12051;;;7536:22;373:12051;7536:22;;:::i;373:12051::-;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;2091:12;373:12051;;2083:65;373:12051;;;;;2091:27;373:12051;;2083:65;:::i;:::-;373:12051;;;2091:12;373:12051;;2219:118;373:12051;;;;;2091:12;373:12051;;;2240:24;373:12051;;2268:10;2240:38;2219:118;:::i;:::-;2466:103:2;;:::i;:::-;11899:32:3;;373:12051;;;;;2091:12;373:12051;;;;12047:30;373:12051;;;12047:30;373:12051;;;;;;;:::i;:::-;;;;12091:32;12087:101;;373:12051;;;;;;;2091:12;373:12051;;12047:30;373:12051;;;12239:30;373:12051;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;12358:57;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12047:30;373:12051;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12399:15;;373:12051;;;;12358:57;;;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12358:57;373:12051;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12087:101;373:12051;;;;;;;;;;;;;;:::i;:::-;;;12047:30;373:12051;;;;;;;12087:101;;;;;373:12051;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;1282:23;373:12051;1282:23;;;;;;;;:::i;:::-;373:12051;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:12;373:12051;;2083:65;373:12051;;;;;2091:27;373:12051;;2083:65;:::i;:::-;2466:103:2;;:::i;:::-;373:12051:3;;;2091:12;373:12051;;;;;;4487:37;373:12051;;;;;;;;;;;;;;;;;;;;4602:53;373:12051;;4639:15;;373:12051;;4627:10;4602:53;;373:12051;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;1244:32;373:12051;1244:32;;;;;;373:12051;1244:32;;:::i;373:12051::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6181:11;373:12051;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5217:12;373:12051;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;5217:12;373:12051;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;373:12051:3;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;1244:32;373:12051;;;;;;1244:32;-1:-1:-1;373:12051:3;;;;-1:-1:-1;373:12051:3;:::o;:::-;1282:23;373:12051;;;;;;1282:23;-1:-1:-1;373:12051:3;;;;-1:-1:-1;373:12051:3;:::o;:::-;;;;;;;;-1:-1:-1;373:12051:3;;-1:-1:-1;373:12051:3;;;-1:-1:-1;373:12051:3;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;373:12051:3;;;;-1:-1:-1;373:12051:3;;;-1:-1:-1;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;373:12051:3;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;-1:-1:-1;;373:12051:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;373:12051:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;1796:162:0:-;1710:6;373:12051:3;-1:-1:-1;;;;;373:12051:3;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;373:12051:3;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;373:12051:3;;;1901:40:0;373:12051:3;-1:-1:-1;;;;;373:12051:3;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;373:12051:3;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;373:12051:3;;-1:-1:-1;373:12051:3;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;373:12051:3;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;373:12051:3;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;373:12051:3;;;;;;;;-1:-1:-1;;373:12051:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2575:307:2;1899:1;2702:7;373:12051:3;2702:18:2;2698:86;;1899:1;2702:7;373:12051:3;2575:307:2:o;2698:86::-;373:12051:3;;-1:-1:-1;;;2743:30:2;;;;;373:12051:3;;;;:::o;:::-;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;373:12051:3;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;373:12051:3;;;;;;;;;;;;;;;;;:::o;11217:320::-;11339:7;373:12051;11332:1;11335:18;;;;;;373:12051;-1:-1:-1;;;373:12051:3;;;;;;;;;;11339:7;373:12051;;:::i;:::-;;;;;;;;;:::i;11355:3::-;373:12051;;11394:10;;;:::i;:::-;373:12051;;;;;;;;:::i;:::-;;;;;;;11378:28;373:12051;;;;;;11410:21;11378:53;11374:120;;11355:3;;;:::i;:::-;11320:13;;11374:120;11451:7;;;:::o"},"methodIdentifiers":{"agentMemories(address,uint256)":"5730e4c8","allMemoryHashes(uint256)":"19abf3c7","allTags(uint256)":"30babdd4","batchCommitMemoryHashes(bytes32[],string[],string[],string[],uint256[],string[][])":"a6ce4fc5","commitMemoryHash(bytes32,string,string,string,uint256,string[])":"732ac8cc","contentTypeCount(string)":"d121bf0f","getAgentMemories(address)":"552338b3","getAllTags()":"7038f157","getMemoryHash(bytes32)":"077f9e19","getMemoryHashByIndex(uint256)":"440bc494","getMemoryHashByZGStorageId(string)":"91ff9a1c","getMemoryHashesByContentType(string)":"aaecbb35","getMemoryHashesByTag(string)":"14205822","getMemoryStats()":"fd098e1e","getTotalMemoryHashes()":"efbc4e96","isMemoryHashVerified(bytes32)":"82482d41","memoryHashes(bytes32)":"4b31f22c","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeMemoryHash(bytes32)":"7afb8065","tagToHashes(string,uint256)":"f82e3dda","transferOwnership(address)":"f2fde38b","updateZGStorageId(bytes32,string)":"3ea60080","verifiedHashes(bytes32)":"374146e2","verifyMemoryHash(bytes32)":"233e42ae","zgStorageToHash(string)":"f7e38666"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"zgStorageId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MemoryHashCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MemoryHashRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MemoryHashVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"zgStorageId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MemoryIndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MemoryTagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agentMemories\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allMemoryHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allTags\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"string[]\",\"name\":\"metadatas\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"zgStorageIds\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"contentTypes\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"sizes\",\"type\":\"uint256[]\"},{\"internalType\":\"string[][]\",\"name\":\"allTags\",\"type\":\"string[][]\"}],\"name\":\"batchCommitMemoryHashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"zgStorageId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"}],\"name\":\"commitMemoryHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"contentTypeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"getAgentMemories\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTags\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getMemoryHash\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"zgStorageId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"tags\",\"type\":\"string[]\"}],\"internalType\":\"struct MemoryRegistry.MemoryHash\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getMemoryHashByIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"zgStorageId\",\"type\":\"string\"}],\"name\":\"getMemoryHashByZGStorageId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contentType\",\"type\":\"string\"}],\"name\":\"getMemoryHashesByContentType\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tag\",\"type\":\"string\"}],\"name\":\"getMemoryHashesByTag\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemoryStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalMemories\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeMemories\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verifiedMemories\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSize\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMemoryHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isMemoryHashVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"memoryHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"zgStorageId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"revokeMemoryHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tagToHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"newZgStorageId\",\"type\":\"string\"}],\"name\":\"updateZGStorageId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verifiedHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"verifyMemoryHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"zgStorageToHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for anchoring memory hashes on 0G Chain for verifiability\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"batchCommitMemoryHashes(bytes32[],string[],string[],string[],uint256[],string[][])\":{\"details\":\"Batch commit multiple memory hashes with 0G Storage integration\",\"params\":{\"allTags\":\"Array of tag arrays for each memory\",\"contentTypes\":\"Array of content types\",\"hashes\":\"Array of hashes to commit\",\"metadatas\":\"Array of metadata corresponding to hashes\",\"sizes\":\"Array of content sizes\",\"zgStorageIds\":\"Array of 0G Storage identifiers\"}},\"commitMemoryHash(bytes32,string,string,string,uint256,string[])\":{\"details\":\"Commit a memory hash to the registry with 0G Storage integration\",\"params\":{\"contentType\":\"Type of content (text, image, etc.)\",\"hash\":\"The hash of the memory content\",\"metadata\":\"Additional metadata about the memory\",\"size\":\"Size of the content in bytes\",\"tags\":\"Tags for categorization\",\"zgStorageId\":\"The 0G Storage identifier\"}},\"getAgentMemories(address)\":{\"details\":\"Get all memory hashes for an agent\",\"params\":{\"agent\":\"The agent address\"}},\"getAllTags()\":{\"details\":\"Get all available tags\"},\"getMemoryHash(bytes32)\":{\"details\":\"Get memory hash details\",\"params\":{\"hash\":\"The hash to query\"}},\"getMemoryHashByIndex(uint256)\":{\"details\":\"Get memory hash by index (for enumeration)\",\"params\":{\"index\":\"The index in the array\"}},\"getMemoryHashByZGStorageId(string)\":{\"details\":\"Get memory hash by 0G Storage ID\",\"params\":{\"zgStorageId\":\"The 0G Storage identifier\"}},\"getMemoryHashesByContentType(string)\":{\"details\":\"Get memory hashes by content type\",\"params\":{\"contentType\":\"The content type to search for\"}},\"getMemoryHashesByTag(string)\":{\"details\":\"Get memory hashes by tag\",\"params\":{\"tag\":\"The tag to search for\"}},\"getMemoryStats()\":{\"details\":\"Get comprehensive memory statistics\"},\"getTotalMemoryHashes()\":{\"details\":\"Get total number of memory hashes\"},\"isMemoryHashVerified(bytes32)\":{\"details\":\"Check if a hash is verified\",\"params\":{\"hash\":\"The hash to check\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeMemoryHash(bytes32)\":{\"details\":\"Revoke a memory hash (only by the owner)\",\"params\":{\"hash\":\"The hash to revoke\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateZGStorageId(bytes32,string)\":{\"details\":\"Update 0G Storage ID for existing memory (for migration purposes)\",\"params\":{\"hash\":\"The memory hash\",\"newZgStorageId\":\"The new 0G Storage ID\"}},\"verifyMemoryHash(bytes32)\":{\"details\":\"Verify a memory hash (cross-agent verification)\",\"params\":{\"hash\":\"The hash to verify\"}}},\"title\":\"MemoryRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract allows agents to commit memory hashes and verify them across agents\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MemoryRegistry.sol\":\"MemoryRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/MemoryRegistry.sol\":{\"keccak256\":\"0xc2f1958d280f4a3948a8aad32cce7a4d1d02adecf23020d2f6a1d1bbb01764f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7826006f625f6f7dc3772fe87fe8c1c38e1e5e001445dc892f0b5723c8a48bd1\",\"dweb:/ipfs/Qmaejw1eUKvM7cNLa4KSS4TFcChzPizzrTEswvhNVNKMfW\"]}},\"version\":1}"}}}}}